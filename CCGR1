board/kontron/sl-mx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
board/kontron/sl-mx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
board/kontron/sl-mx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
board/kontron/sl-mx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
board/kontron/sl-mx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
board/kontron/sl-mx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
board/kontron/sl-mx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
board/kontron/sl-mx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR7);
board/toradex/colibri_imx6/colibri_imx6.c:	reg = __raw_readl(&mxc_ccm->CCGR3);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(reg, &mxc_ccm->CCGR3);
board/toradex/colibri_imx6/colibri_imx6.c:	reg = readl(&mxc_ccm->cs2cdr);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(reg, &mxc_ccm->cs2cdr);
board/toradex/colibri_imx6/colibri_imx6.c:	reg = readl(&mxc_ccm->cscmr2);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(reg, &mxc_ccm->cscmr2);
board/toradex/colibri_imx6/colibri_imx6.c:	reg = readl(&mxc_ccm->chsccdr);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(reg, &mxc_ccm->chsccdr);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(0x0030FC03, &ccm->CCGR1);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(0x0FFFFFF3, &ccm->CCGR2);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(0x3FF0300F, &ccm->CCGR3);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(0x00FFF300, &ccm->CCGR4);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(0x0F0000F3, &ccm->CCGR5);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(0x000003FF, &ccm->CCGR6);
board/toradex/colibri_imx6/colibri_imx6.c:	writel(0x000000FB, &ccm->ccosr);
board/toradex/colibri_vf/dcu.c:	clrbits_le32(&ccm->cscmr1, CCM_CSCMR1_DCU0_CLK_SEL);
board/toradex/colibri_vf/dcu.c:	clrsetbits_le32(&ccm->cscdr3,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccgr0, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	setbits_le32(&ccm->ccgr0, CCM_CCGR0_DSPI1_CTRL_MASK);
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccgr1, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccgr2, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccgr3, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccgr4, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccgr6, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccgr7, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccgr9, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccgr10, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	setbits_le32(&ccm->ccgr1, CCM_CCGR1_USBC0_CTRL_MASK);
board/toradex/colibri_vf/colibri_vf.c:	setbits_le32(&ccm->ccgr7, CCM_CCGR7_USBC1_CTRL_MASK);
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccr, CCM_CCR_OSCNT_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->ccsr, CCM_REG_CTRL_MASK, pfd_clk_sel |
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->cacrr, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->cscmr1, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->cscdr1, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->cscdr2, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->cscdr3, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:	clrsetbits_le32(&ccm->cscmr2, CCM_REG_CTRL_MASK,
board/toradex/colibri_vf/colibri_vf.c:		setbits_le32(&ccm->ccgr1, CCM_CCGR1_TCON0_CTRL_MASK);
board/toradex/colibri_vf/colibri_vf.c:		setbits_le32(&ccm->ccgr3, CCM_CCGR3_DCU0_CTRL_MASK);
board/toradex/apalis_imx6/apalis_imx6.c:	reg = __raw_readl(&mxc_ccm->CCGR3);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(reg, &mxc_ccm->CCGR3);
board/toradex/apalis_imx6/apalis_imx6.c:	reg = readl(&mxc_ccm->cs2cdr);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(reg, &mxc_ccm->cs2cdr);
board/toradex/apalis_imx6/apalis_imx6.c:	reg = readl(&mxc_ccm->cscmr2);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(reg, &mxc_ccm->cscmr2);
board/toradex/apalis_imx6/apalis_imx6.c:	reg = readl(&mxc_ccm->chsccdr);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(reg, &mxc_ccm->chsccdr);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(0x0030FC03, &ccm->CCGR1);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(0x0FFFFFF3, &ccm->CCGR2);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(0x3FF0300F, &ccm->CCGR3);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(0x00FFF300, &ccm->CCGR4);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(0x0F0000F3, &ccm->CCGR5);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(0x000003FF, &ccm->CCGR6);
board/toradex/apalis_imx6/apalis_imx6.c:	writel(0x000000FB, &ccm->ccosr);
board/technexion/pico-imx6/spl.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/technexion/pico-imx6/spl.c:	writel(0x0030FC03, &ccm->CCGR1);
board/technexion/pico-imx6/spl.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/technexion/pico-imx6/spl.c:	writel(0x3FF03000, &ccm->CCGR3);
board/technexion/pico-imx6/spl.c:	writel(0x00FFF300, &ccm->CCGR4);
board/technexion/pico-imx6/spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/technexion/pico-imx6/spl.c:	writel(0x000003FF, &ccm->CCGR6);
board/technexion/pico-imx6/pico-imx6.c:	reg = __raw_readl(&mxc_ccm->CCGR3);
board/technexion/pico-imx6/pico-imx6.c:	writel(reg, &mxc_ccm->CCGR3);
board/technexion/pico-imx6/pico-imx6.c:	reg = readl(&mxc_ccm->cs2cdr);
board/technexion/pico-imx6/pico-imx6.c:	writel(reg, &mxc_ccm->cs2cdr);
board/technexion/pico-imx6/pico-imx6.c:	reg = readl(&mxc_ccm->cscmr2);
board/technexion/pico-imx6/pico-imx6.c:	writel(reg, &mxc_ccm->cscmr2);
board/technexion/pico-imx6/pico-imx6.c:	reg = readl(&mxc_ccm->chsccdr);
board/technexion/pico-imx6/pico-imx6.c:	writel(reg, &mxc_ccm->chsccdr);
board/technexion/pico-imx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
board/technexion/pico-imx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
board/technexion/pico-imx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
board/technexion/pico-imx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
board/technexion/pico-imx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
board/technexion/pico-imx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
board/technexion/pico-imx6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
board/sunxi/gmac.c:	setbits_le32(&ccm->gmac_clk_cfg, CCM_GMAC_CTRL_TX_CLK_SRC_INT_RGMII |
board/sunxi/gmac.c:	setbits_le32(&ccm->gmac_clk_cfg,
board/sunxi/gmac.c:	setbits_le32(&ccm->gmac_clk_cfg, CCM_GMAC_CTRL_TX_CLK_SRC_MII |
board/sunxi/board.c:	setbits_le32(&ccm->ahb_gate0, (CLK_GATE_OPEN << AHB_GATE_OFFSET_NAND0));
board/sunxi/board.c:	setbits_le32(&ccm->ahb_reset0_cfg, (1 << AHB_GATE_OFFSET_NAND0));
board/sunxi/board.c:	setbits_le32(&ccm->nand0_clk_cfg, CCM_NAND_CTRL_ENABLE | AHB_DIV_1);
board/udoo/neo/neo.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
board/udoo/neo/neo.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
board/udoo/neo/neo.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
board/udoo/neo/neo.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
board/udoo/neo/neo.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
board/udoo/neo/neo.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
board/udoo/neo/neo.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
board/udoo/neo/neo.c:	writel(0xFFFFFFFF, &ccm->CCGR7);
board/udoo/udoo_spl.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/udoo/udoo_spl.c:	writel(0x0030FC03, &ccm->CCGR1);
board/udoo/udoo_spl.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/udoo/udoo_spl.c:	writel(0x3FF00000, &ccm->CCGR3);
board/udoo/udoo_spl.c:	writel(0x00FFF300, &ccm->CCGR4);
board/udoo/udoo_spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/udoo/udoo_spl.c:	writel(0x000003FF, &ccm->CCGR6);
board/wandboard/wandboard.c:	reg = readl(&mxc_ccm->chsccdr);
board/wandboard/wandboard.c:	writel(reg, &mxc_ccm->chsccdr);
board/wandboard/spl.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/wandboard/spl.c:	writel(0x0030FC03, &ccm->CCGR1);
board/wandboard/spl.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/wandboard/spl.c:	writel(0x3FF03000, &ccm->CCGR3);
board/wandboard/spl.c:	writel(0x00FFF300, &ccm->CCGR4);
board/wandboard/spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/wandboard/spl.c:	writel(0x000003FF, &ccm->CCGR6);
board/ge/b1x5v2/spl.c:	writel(ccgr0, &ccm->CCGR0);
board/ge/b1x5v2/spl.c:	writel(ccgr1, &ccm->CCGR1);
board/ge/b1x5v2/spl.c:	writel(ccgr2, &ccm->CCGR2);
board/ge/b1x5v2/spl.c:	writel(ccgr3, &ccm->CCGR3);
board/ge/b1x5v2/spl.c:	writel(ccgr4, &ccm->CCGR4);
board/ge/b1x5v2/spl.c:	writel(ccgr5, &ccm->CCGR5);
board/ge/b1x5v2/spl.c:	writel(ccgr6, &ccm->CCGR6);
board/ge/b1x5v2/b1x5v2.c:	setbits_le32(&ccm->analog_pll_video, BM_ANADIG_PLL_VIDEO_POWERDOWN);
board/ge/b1x5v2/b1x5v2.c:	clrsetbits_le32(&ccm->analog_pll_video,
board/ge/b1x5v2/b1x5v2.c:	writel(BF_ANADIG_PLL_VIDEO_NUM_A(11), &ccm->analog_pll_video_num);
board/ge/b1x5v2/b1x5v2.c:	writel(BF_ANADIG_PLL_VIDEO_DENOM_B(12), &ccm->analog_pll_video_denom);
board/ge/b1x5v2/b1x5v2.c:	clrbits_le32(&ccm->analog_pll_video, BM_ANADIG_PLL_VIDEO_POWERDOWN);
board/ge/b1x5v2/b1x5v2.c:		if (readl(&ccm->analog_pll_video) & BM_ANADIG_PLL_VIDEO_LOCK)
board/ge/b1x5v2/b1x5v2.c:	clrsetbits_le32(&ccm->analog_pll_video,
board/ge/b1x5v2/b1x5v2.c:	setbits_le32(&mxc_ccm->cscmr2, MXC_CCM_CSCMR2_LDB_DI0_IPU_DIV);
board/ge/b1x5v2/b1x5v2.c:	clrsetbits_le32(&mxc_ccm->chsccdr,
board/ge/b1x5v2/b1x5v2.c:	setbits_le32(&mxc_ccm->CCGR3, MXC_CCM_CCGR3_LDB_DI0_MASK);
board/ge/mx53ppd/mx53ppd_video.c:	clrsetbits_le32(&mxc_ccm->cscmr2,
board/ge/mx53ppd/mx53ppd_video.c:	setbits_le32(&mxc_ccm->CCGR6, MXC_CCM_CCGR6_LDB_DI0(3));
board/ge/mx53ppd/mx53ppd_video.c:	setbits_le32(&mxc_ccm->CCGR6, MXC_CCM_CCGR6_IPU_DI0(3));
board/ge/bx50v3/bx50v3.c:	setbits_le32(&ccm->analog_pll_video, BM_ANADIG_PLL_VIDEO_POWERDOWN);
board/ge/bx50v3/bx50v3.c:	clrsetbits_le32(&ccm->analog_pll_video,
board/ge/bx50v3/bx50v3.c:	writel(BF_ANADIG_PLL_VIDEO_NUM_A(11), &ccm->analog_pll_video_num);
board/ge/bx50v3/bx50v3.c:	writel(BF_ANADIG_PLL_VIDEO_DENOM_B(12), &ccm->analog_pll_video_denom);
board/ge/bx50v3/bx50v3.c:	clrbits_le32(&ccm->analog_pll_video, BM_ANADIG_PLL_VIDEO_POWERDOWN);
board/ge/bx50v3/bx50v3.c:		if (readl(&ccm->analog_pll_video) & BM_ANADIG_PLL_VIDEO_LOCK)
board/ge/bx50v3/bx50v3.c:	clrsetbits_le32(&ccm->analog_pll_video,
board/ge/bx50v3/bx50v3.c:	setbits_le32(&mxc_ccm->cscmr2, MXC_CCM_CSCMR2_LDB_DI0_IPU_DIV);
board/ge/bx50v3/bx50v3.c:	clrsetbits_le32(&mxc_ccm->chsccdr,
board/ge/bx50v3/bx50v3.c:	setbits_le32(&mxc_ccm->CCGR3, MXC_CCM_CCGR3_LDB_DI0_MASK);
board/ge/bx50v3/bx50v3.c:	setbits_le32(&mxc_ccm->cscmr2, MXC_CCM_CSCMR2_LDB_DI0_IPU_DIV);
board/ge/bx50v3/bx50v3.c:	clrsetbits_le32(&mxc_ccm->chsccdr,
board/ge/bx50v3/bx50v3.c:	setbits_le32(&mxc_ccm->CCGR3, MXC_CCM_CCGR3_LDB_DI0_MASK);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	setbits_le32(&ccm->analog_pll_video, BM_ANADIG_PLL_VIDEO_POWERDOWN);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	reg = readl(&ccm->analog_pll_video);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(reg, &ccm->analog_pll_video);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(BF_ANADIG_PLL_VIDEO_NUM_A(11), &ccm->analog_pll_video_num);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(BF_ANADIG_PLL_VIDEO_DENOM_B(12), &ccm->analog_pll_video_denom);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(reg, &ccm->analog_pll_video);
board/solidrun/mx6cuboxi/mx6cuboxi.c:		if (readl(&ccm->analog_pll_video) & BM_ANADIG_PLL_VIDEO_LOCK)
board/solidrun/mx6cuboxi/mx6cuboxi.c:	reg = readl(&ccm->analog_pll_video);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(reg, &ccm->analog_pll_video);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	clrbits_le32(&ccm->CCGR3, MXC_CCM_CCGR3_LDB_DI0_MASK);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	reg = readl(&ccm->chsccdr);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(reg, &ccm->chsccdr);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	setbits_le32(&ccm->CCGR3, MXC_CCM_CCGR3_LDB_DI0_MASK);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(0x0030FC03, &ccm->CCGR1);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(0x3FF00000, &ccm->CCGR3);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(0x00FFF300, &ccm->CCGR4);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/solidrun/mx6cuboxi/mx6cuboxi.c:	writel(0x000003FF, &ccm->CCGR6);
board/menlo/m53menlo/m53menlo.c:	clrsetbits_le32(&mxc_ccm->cscmr2,
board/BuR/brppt2/board.c:	 * setbits_le32(&ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/BuR/brppt2/board.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/BuR/brppt2/board.c:	writel(0x00F0FC03, &ccm->CCGR1);
board/BuR/brppt2/board.c:	writel(0x0FFFF000, &ccm->CCGR2);
board/BuR/brppt2/board.c:	writel(0x3FF00000, &ccm->CCGR3);
board/BuR/brppt2/board.c:	writel(0x00FFF300, &ccm->CCGR4);
board/BuR/brppt2/board.c:	writel(0x0F0030C3, &ccm->CCGR5);
board/BuR/brppt2/board.c:	writel(0x000003F0, &ccm->CCGR6);
board/freescale/mx6ull_ddr3_val/mx6ull_ddr3_val.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/freescale/mx51evk/mx51evk.c:	writel(0x0, &mxc_ccm->cacrr);
board/freescale/mx6memcal/spl.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/freescale/mx6memcal/spl.c:	writel(0x0030FC03, &ccm->CCGR1);
board/freescale/mx6memcal/spl.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/freescale/mx6memcal/spl.c:	writel(0x3FF00000, &ccm->CCGR3);
board/freescale/mx6memcal/spl.c:	writel(0x00FFF300, &ccm->CCGR4);
board/freescale/mx6memcal/spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/freescale/mx6memcal/spl.c:	writel(0x000003FF, &ccm->CCGR6);
board/freescale/mx6sx_17x17_val/mx6sx_17x17_val.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/freescale/mx6sx_19x19_val/mx6sx_19x19_val.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/freescale/imx8mq_val/imx8mq_val.c:	* 1:enet1 rmii clock comes from ccm->pad->loopback, SION bit for the pad (iomuxc_sw_input_on_pad_enet_td2) should be set also;
board/freescale/mx6ullevk/mx6ullevk.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:	writel(0xFFFFFFFF, &ccm->CCGR7);
board/freescale/mx6sxsabreauto/mx6sxsabreauto.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/freescale/mx6slevk/mx6slevk.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
board/freescale/mx6slevk/mx6slevk.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
board/freescale/mx6slevk/mx6slevk.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
board/freescale/mx6slevk/mx6slevk.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
board/freescale/mx6slevk/mx6slevk.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
board/freescale/mx6slevk/mx6slevk.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
board/freescale/mx6slevk/mx6slevk.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
board/freescale/mx6slevk/mx6slevk.c:	writel(0x00260324, &ccm->cbcmr);
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccgr0, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccgr1, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccgr2, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccgr3, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccgr4, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccgr6, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccgr7, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccgr9, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccgr10, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccr, CCM_CCR_OSCNT_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->ccsr, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->cacrr, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->cscmr1, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->cscdr1, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->cscdr2, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->cscdr3, CCM_REG_CTRL_MASK,
board/freescale/vf610twr/vf610twr.c:	clrsetbits_le32(&ccm->cscmr2, CCM_REG_CTRL_MASK,
board/freescale/mx6sabresd/mx6sabresd.c:	reg = readl(&mxc_ccm->CCGR3);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(reg, &mxc_ccm->CCGR3);
board/freescale/mx6sabresd/mx6sabresd.c:	reg = readl(&mxc_ccm->cs2cdr);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(reg, &mxc_ccm->cs2cdr);
board/freescale/mx6sabresd/mx6sabresd.c:	reg = readl(&mxc_ccm->cscmr2);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(reg, &mxc_ccm->cscmr2);
board/freescale/mx6sabresd/mx6sabresd.c:	reg = readl(&mxc_ccm->chsccdr);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(reg, &mxc_ccm->chsccdr);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(0x0030FC03, &ccm->CCGR1);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(0x3FF00000, &ccm->CCGR3);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(0x00FFF300, &ccm->CCGR4);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/freescale/mx6sabresd/mx6sabresd.c:	writel(0x000003FF, &ccm->CCGR6);
board/freescale/mx6sabreauto/mx6sabreauto.c:	ccgr6 = readl(&imx_ccm->CCGR6);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(ccgr6, &imx_ccm->CCGR6);
board/freescale/mx6sabreauto/mx6sabreauto.c:	cscmr1 = readl(&imx_ccm->cscmr1);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(cscmr1, &imx_ccm->cscmr1);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(ccgr6, &imx_ccm->CCGR6);
board/freescale/mx6sabreauto/mx6sabreauto.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/freescale/mx6sabreauto/mx6sabreauto.c:	reg = readl(&mxc_ccm->CCGR3);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(reg, &mxc_ccm->CCGR3);
board/freescale/mx6sabreauto/mx6sabreauto.c:	reg = readl(&mxc_ccm->cs2cdr);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(reg, &mxc_ccm->cs2cdr);
board/freescale/mx6sabreauto/mx6sabreauto.c:	reg = readl(&mxc_ccm->cscmr2);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(reg, &mxc_ccm->cscmr2);
board/freescale/mx6sabreauto/mx6sabreauto.c:	reg = readl(&mxc_ccm->chsccdr);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(reg, &mxc_ccm->chsccdr);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(0x0030FC03, &ccm->CCGR1);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(0x3FF00000, &ccm->CCGR3);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(0x00FFF300, &ccm->CCGR4);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/freescale/mx6sabreauto/mx6sabreauto.c:	writel(0x000003FF, &ccm->CCGR6);
board/freescale/imx8mm_val/imx8mm_val.c:	* 1:enet1 rmii clock comes from ccm->pad->loopback, SION bit for the pad (iomuxc_sw_input_on_pad_enet_td2) should be set also;
board/freescale/mx6ul_14x14_ddr3_val/mx6ul_14x14_ddr3_val.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/freescale/mx6ul_14x14_lpddr2_val/mx6ul_14x14_lpddr2_val.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/engicam/common/spl.c:	writel(0x00003F3F, &ccm->CCGR0);
board/engicam/common/spl.c:	writel(0x0030FC00, &ccm->CCGR1);
board/engicam/common/spl.c:	writel(0x000FC000, &ccm->CCGR2);
board/engicam/common/spl.c:	writel(0x3F300000, &ccm->CCGR3);
board/engicam/common/spl.c:	writel(0xFF00F300, &ccm->CCGR4);
board/engicam/common/spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/engicam/common/spl.c:	writel(0x000003CC, &ccm->CCGR6);
board/engicam/common/spl.c:	writel(0x00c03f3f, &ccm->CCGR0);
board/engicam/common/spl.c:	writel(0xfcffff00, &ccm->CCGR1);
board/engicam/common/spl.c:	writel(0x0cffffcc, &ccm->CCGR2);
board/engicam/common/spl.c:	writel(0x3f3c3030, &ccm->CCGR3);
board/engicam/common/spl.c:	writel(0xff00fffc, &ccm->CCGR4);
board/engicam/common/spl.c:	writel(0x033f30ff, &ccm->CCGR5);
board/engicam/common/spl.c:	writel(0x00c00fff, &ccm->CCGR6);
board/engicam/imx6q/imx6q.c:	clrbits_le32(&mxc_ccm->CCGR2, MXC_CCM_CCGR2_IOMUX_IPT_CLK_IO_MASK);
board/engicam/imx6q/imx6q.c:	clrsetbits_le32(&mxc_ccm->cs2cdr,
board/engicam/imx6q/imx6q.c:	setbits_le32(&mxc_ccm->CCGR2, MXC_CCM_CCGR2_IOMUX_IPT_CLK_IO_MASK);
board/engicam/imx6q/imx6q.c:	setbits_le32(&mxc_ccm->CCGR4,
board/engicam/imx6q/imx6q.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/engicam/imx6q/imx6q.c:	reg = __raw_readl(&mxc_ccm->CCGR3);
board/engicam/imx6q/imx6q.c:	writel(reg, &mxc_ccm->CCGR3);
board/engicam/imx6q/imx6q.c:	reg = readl(&mxc_ccm->cs2cdr);
board/engicam/imx6q/imx6q.c:	writel(reg, &mxc_ccm->cs2cdr);
board/engicam/imx6q/imx6q.c:	reg = readl(&mxc_ccm->cscmr2);
board/engicam/imx6q/imx6q.c:	writel(reg, &mxc_ccm->cscmr2);
board/engicam/imx6q/imx6q.c:	reg = readl(&mxc_ccm->chsccdr);
board/engicam/imx6q/imx6q.c:	writel(reg, &mxc_ccm->chsccdr);
board/engicam/imx6ul/imx6ul.c:	clrbits_le32(&mxc_ccm->CCGR4,
board/engicam/imx6ul/imx6ul.c:	clrbits_le32(&mxc_ccm->cscmr1,
board/engicam/imx6ul/imx6ul.c:	clrsetbits_le32(&mxc_ccm->cscdr1,
board/engicam/imx6ul/imx6ul.c:	setbits_le32(&mxc_ccm->CCGR4,
board/engicam/imx6ul/imx6ul.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/softing/vining_2000/vining_2000.c:	writel(0xF000000F, &ccm->CCGR0);	/* AIPS_TZ{1,2,3} */
board/softing/vining_2000/vining_2000.c:	writel(0x303C0000, &ccm->CCGR1);	/* GPT, OCRAM */
board/softing/vining_2000/vining_2000.c:	writel(0x00FFFCC0, &ccm->CCGR2);	/* IPMUX, I2C1, I2C3 */
board/softing/vining_2000/vining_2000.c:	writel(0x3F300030, &ccm->CCGR3);	/* OCRAM, MMDC, ENET */
board/softing/vining_2000/vining_2000.c:	writel(0x0000C003, &ccm->CCGR4);	/* PCI, PL301 */
board/softing/vining_2000/vining_2000.c:	writel(0x0F0330C3, &ccm->CCGR5);	/* UART, ROM */
board/softing/vining_2000/vining_2000.c:	writel(0x00000F00, &ccm->CCGR6);	/* SDHI4, EIM */
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc.c:	setbits_le32(&mxc_ccm->CCGR6, 0x1 << MXC_CCM_CCGR6_EMI_SLOW_OFFSET);
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc_spl.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc_spl.c:	writel(0x0030FC03, &ccm->CCGR1);
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc_spl.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc_spl.c:	writel(0x3FF00000, &ccm->CCGR3);
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc_spl.c:	writel(0x00FFF300, &ccm->CCGR4);
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc_spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc_spl.c:	writel(0x000003FF, &ccm->CCGR6);
board/bticino/mamoj/spl.c:	writel(0x00003f3f, &ccm->CCGR0);
board/bticino/mamoj/spl.c:	writel(0x0030fc00, &ccm->CCGR1);
board/bticino/mamoj/spl.c:	writel(0x000fc000, &ccm->CCGR2);
board/bticino/mamoj/spl.c:	writel(0x3f300000, &ccm->CCGR3);
board/bticino/mamoj/spl.c:	writel(0xff00f300, &ccm->CCGR4);
board/bticino/mamoj/spl.c:	writel(0x0f0000c3, &ccm->CCGR5);
board/bticino/mamoj/spl.c:	writel(0x000003cc, &ccm->CCGR6);
board/compulab/cm_fx6/cm_fx6.c:	setbits_le32(&mxc_ccm->CCGR3, MXC_CCM_CCGR3_IPU1_IPU_DI0_MASK);
board/compulab/cm_fx6/spl.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/tbs/tbs2910/tbs2910.c:	reg = readl(&ccm->analog_pll_video);
board/tbs/tbs2910/tbs2910.c:	writel(reg, &ccm->analog_pll_video);
board/tbs/tbs2910/tbs2910.c:	writel(reg, &ccm->analog_pll_video);
board/tbs/tbs2910/tbs2910.c:	writel(BF_ANADIG_PLL_VIDEO_NUM_A(11), &ccm->analog_pll_video_num);
board/tbs/tbs2910/tbs2910.c:	writel(BF_ANADIG_PLL_VIDEO_DENOM_B(12), &ccm->analog_pll_video_denom);
board/tbs/tbs2910/tbs2910.c:	writel(reg, &ccm->analog_pll_video);
board/tbs/tbs2910/tbs2910.c:		if (readl(&ccm->analog_pll_video) & BM_ANADIG_PLL_VIDEO_LOCK)
board/tbs/tbs2910/tbs2910.c:	reg = readl(&ccm->analog_pll_video);
board/tbs/tbs2910/tbs2910.c:	writel(reg, &ccm->analog_pll_video);
board/tbs/tbs2910/tbs2910.c:	reg = readl(&ccm->CCGR3);
board/tbs/tbs2910/tbs2910.c:	writel(reg, &ccm->CCGR3);
board/tbs/tbs2910/tbs2910.c:	reg = readl(&ccm->chsccdr);
board/tbs/tbs2910/tbs2910.c:	writel(reg, &ccm->chsccdr);
board/tbs/tbs2910/tbs2910.c:	reg = readl(&ccm->CCGR3);
board/tbs/tbs2910/tbs2910.c:	writel(reg, &ccm->CCGR3);
board/gateworks/gw_ventana/gw_ventana_spl.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/gateworks/gw_ventana/gw_ventana_spl.c:	writel(0x0030FC03, &ccm->CCGR1);
board/gateworks/gw_ventana/gw_ventana_spl.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/gateworks/gw_ventana/gw_ventana_spl.c:	writel(0x3FF00000, &ccm->CCGR3);
board/gateworks/gw_ventana/gw_ventana_spl.c:	writel(0xFFFFF300, &ccm->CCGR4);	/* enable NAND/GPMI/BCH clks */
board/gateworks/gw_ventana/gw_ventana_spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/gateworks/gw_ventana/gw_ventana_spl.c:	writel(0x000003FF, &ccm->CCGR6);
board/gateworks/gw_ventana/gw_ventana.c:	reg = __raw_readl(&mxc_ccm->CCGR3);
board/gateworks/gw_ventana/gw_ventana.c:	writel(reg, &mxc_ccm->CCGR3);
board/gateworks/gw_ventana/gw_ventana.c:	reg = readl(&mxc_ccm->cs2cdr);
board/gateworks/gw_ventana/gw_ventana.c:	writel(reg, &mxc_ccm->cs2cdr);
board/gateworks/gw_ventana/gw_ventana.c:	reg = readl(&mxc_ccm->cscmr2);
board/gateworks/gw_ventana/gw_ventana.c:	writel(reg, &mxc_ccm->cscmr2);
board/gateworks/gw_ventana/gw_ventana.c:	reg = readl(&mxc_ccm->chsccdr);
board/gateworks/gw_ventana/gw_ventana.c:	writel(reg, &mxc_ccm->chsccdr);
board/dhelectronics/dh_imx6/dh_imx6.c:	setbits_le32(&mxc_ccm->CCGR6, 0x1 << MXC_CCM_CCGR6_EMI_SLOW_OFFSET);
board/dhelectronics/dh_imx6/dh_imx6_spl.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/dhelectronics/dh_imx6/dh_imx6_spl.c:	writel(0x0030FC03, &ccm->CCGR1);
board/dhelectronics/dh_imx6/dh_imx6_spl.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/dhelectronics/dh_imx6/dh_imx6_spl.c:	writel(0x3FF00000, &ccm->CCGR3);
board/dhelectronics/dh_imx6/dh_imx6_spl.c:	writel(0x00FFF300, &ccm->CCGR4);
board/dhelectronics/dh_imx6/dh_imx6_spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/dhelectronics/dh_imx6/dh_imx6_spl.c:	writel(0x000003FF, &ccm->CCGR6);
board/logicpd/imx6/imx6logic.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/logicpd/imx6/imx6logic.c:	writel(0x0030FC03, &ccm->CCGR1);
board/logicpd/imx6/imx6logic.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/logicpd/imx6/imx6logic.c:	writel(0x3FF00000, &ccm->CCGR3);
board/logicpd/imx6/imx6logic.c:	writel(0xFFFFF300, &ccm->CCGR4);
board/logicpd/imx6/imx6logic.c:	writel(0x0F0000F3, &ccm->CCGR5);
board/logicpd/imx6/imx6logic.c:	writel(0x00000FFF, &ccm->CCGR6);
board/kosagi/novena/video.c:	setbits_le32(&ccm->analog_pll_video, BM_ANADIG_PLL_VIDEO_POWERDOWN);
board/kosagi/novena/video.c:	clrsetbits_le32(&ccm->analog_pll_video,
board/kosagi/novena/video.c:	writel(BF_ANADIG_PLL_VIDEO_NUM_A(11), &ccm->analog_pll_video_num);
board/kosagi/novena/video.c:	writel(BF_ANADIG_PLL_VIDEO_DENOM_B(12), &ccm->analog_pll_video_denom);
board/kosagi/novena/video.c:	clrbits_le32(&ccm->analog_pll_video, BM_ANADIG_PLL_VIDEO_POWERDOWN);
board/kosagi/novena/video.c:		if (readl(&ccm->analog_pll_video) & BM_ANADIG_PLL_VIDEO_LOCK)
board/kosagi/novena/video.c:	clrsetbits_le32(&ccm->analog_pll_video,
board/kosagi/novena/video.c:	setbits_le32(&mxc_ccm->CCGR3, MXC_CCM_CCGR3_LDB_DI0_MASK);
board/kosagi/novena/video.c:	clrsetbits_le32(&mxc_ccm->cs2cdr,
board/kosagi/novena/video.c:	clrbits_le32(&mxc_ccm->cscmr2, MXC_CCM_CSCMR2_LDB_DI0_IPU_DIV);
board/kosagi/novena/video.c:	clrsetbits_le32(&mxc_ccm->chsccdr,
board/kosagi/novena/novena_spl.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/kosagi/novena/novena_spl.c:	writel(0x0030FC03, &ccm->CCGR1);
board/kosagi/novena/novena_spl.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/kosagi/novena/novena_spl.c:	writel(0x3FF00000, &ccm->CCGR3);
board/kosagi/novena/novena_spl.c:	writel(0xFFFFF300, &ccm->CCGR4);
board/kosagi/novena/novena_spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/kosagi/novena/novena_spl.c:	writel(0x000003FF, &ccm->CCGR6);
board/aristainetos/aristainetos.c:	reg = readl(&ccm->analog_pll_video);
board/aristainetos/aristainetos.c:	writel(reg, &ccm->analog_pll_video);
board/aristainetos/aristainetos.c:	writel(reg, &ccm->analog_pll_video);
board/aristainetos/aristainetos.c:	       &ccm->analog_pll_video_num);
board/aristainetos/aristainetos.c:	       &ccm->analog_pll_video_denom);
board/aristainetos/aristainetos.c:	writel(reg, &ccm->analog_pll_video);
board/aristainetos/aristainetos.c:		if (readl(&ccm->analog_pll_video) & BM_ANADIG_PLL_VIDEO_LOCK)
board/aristainetos/aristainetos.c:	reg = readl(&ccm->analog_pll_video);
board/aristainetos/aristainetos.c:	writel(reg, &ccm->analog_pll_video);
board/aristainetos/aristainetos.c:	reg = readl(&ccm->cs2cdr);
board/aristainetos/aristainetos.c:	writel(reg, &ccm->cs2cdr);
board/aristainetos/aristainetos.c:	reg = readl(&ccm->cscmr2);
board/aristainetos/aristainetos.c:	writel(reg, &ccm->cscmr2);
board/aristainetos/aristainetos.c:	reg = readl(&ccm->chsccdr);
board/aristainetos/aristainetos.c:	writel(reg, &ccm->chsccdr);
board/seeed/npi_imx6ull/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
board/seeed/npi_imx6ull/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
board/seeed/npi_imx6ull/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
board/seeed/npi_imx6ull/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
board/seeed/npi_imx6ull/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
board/seeed/npi_imx6ull/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
board/seeed/npi_imx6ull/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
board/embest/mx6boards/mx6boards.c:	setbits_le32(&mxc_ccm->CCGR3,
board/embest/mx6boards/mx6boards.c:	clrsetbits_le32(&mxc_ccm->cs2cdr,
board/embest/mx6boards/mx6boards.c:	setbits_le32(&mxc_ccm->cscmr2,
board/embest/mx6boards/mx6boards.c:	setbits_le32(&mxc_ccm->chsccdr,
board/myir/mys_6ulx/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
board/myir/mys_6ulx/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
board/myir/mys_6ulx/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
board/myir/mys_6ulx/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
board/myir/mys_6ulx/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
board/myir/mys_6ulx/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
board/myir/mys_6ulx/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
board/liebherr/display5/spl.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/liebherr/display5/spl.c:	writel(0x0030FC3F, &ccm->CCGR1);
board/liebherr/display5/spl.c:	writel(0x0FFFCFC0, &ccm->CCGR2);
board/liebherr/display5/spl.c:	writel(0x3FF00000, &ccm->CCGR3);
board/liebherr/display5/spl.c:	writel(0x00FFF300, &ccm->CCGR4);
board/liebherr/display5/spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/liebherr/display5/spl.c:	writel(0x000003FF, &ccm->CCGR6);
board/liebherr/mccmon6/spl.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/liebherr/mccmon6/spl.c:	writel(0x0030FC03, &ccm->CCGR1);
board/liebherr/mccmon6/spl.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/liebherr/mccmon6/spl.c:	writel(0x3FF00000, &ccm->CCGR3);
board/liebherr/mccmon6/spl.c:	writel(0x00FFF300, &ccm->CCGR4);
board/liebherr/mccmon6/spl.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/liebherr/mccmon6/spl.c:	writel(0x000003FF, &ccm->CCGR6);
board/phytec/pcl063/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
board/phytec/pcl063/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
board/phytec/pcl063/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
board/phytec/pcl063/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
board/phytec/pcl063/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
board/phytec/pcl063/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
board/phytec/pcl063/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccgr0, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccgr1, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccgr2, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccgr3, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccgr4, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccgr6, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccgr7, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccgr9, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccgr10, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccr, CCM_CCR_OSCNT_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->ccsr, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->cacrr, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->cscmr1, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->cscdr1, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->cscdr2, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->cscdr3, CCM_REG_CTRL_MASK,
board/phytec/pcm052/pcm052.c:	clrsetbits_le32(&ccm->cscmr2, CCM_REG_CTRL_MASK,
board/phytec/pcm058/pcm058.c:	clrbits_le32(&mxc_ccm->CCGR2, MXC_CCM_CCGR2_IOMUX_IPT_CLK_IO_MASK);
board/phytec/pcm058/pcm058.c:	clrsetbits_le32(&mxc_ccm->cs2cdr,
board/phytec/pcm058/pcm058.c:	setbits_le32(&mxc_ccm->CCGR2, MXC_CCM_CCGR2_IOMUX_IPT_CLK_IO_MASK);
board/phytec/pcm058/pcm058.c:	setbits_le32(&mxc_ccm->CCGR4,
board/phytec/pcm058/pcm058.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/phytec/pcm058/pcm058.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/phytec/pcm058/pcm058.c:	writel(0x0030FC03, &ccm->CCGR1);
board/phytec/pcm058/pcm058.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/phytec/pcm058/pcm058.c:	writel(0x3FF00000, &ccm->CCGR3);
board/phytec/pcm058/pcm058.c:	writel(0x00FFF300, &ccm->CCGR4);
board/phytec/pcm058/pcm058.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/phytec/pcm058/pcm058.c:	writel(0x000003FF, &ccm->CCGR6);
board/variscite/dart_6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
board/variscite/dart_6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
board/variscite/dart_6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
board/variscite/dart_6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
board/variscite/dart_6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
board/variscite/dart_6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
board/variscite/dart_6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
board/variscite/dart_6ul/spl.c:	writel(0xFFFFFFFF, &ccm->CCGR7);
board/variscite/dart_6ul/dart_6ul.c:	clrbits_le32(&mxc_ccm->CCGR4,
board/variscite/dart_6ul/dart_6ul.c:	clrbits_le32(&mxc_ccm->cscmr1,
board/variscite/dart_6ul/dart_6ul.c:	clrsetbits_le32(&mxc_ccm->cscdr1,
board/variscite/dart_6ul/dart_6ul.c:	setbits_le32(&mxc_ccm->CCGR4,
board/variscite/dart_6ul/dart_6ul.c:	setbits_le32(&mxc_ccm->CCGR0, MXC_CCM_CCGR0_APBHDMA_MASK);
board/boundary/nitrogen6x/nitrogen6x.c:	reg = __raw_readl(&mxc_ccm->CCGR3);
board/boundary/nitrogen6x/nitrogen6x.c:	writel(reg, &mxc_ccm->CCGR3);
board/boundary/nitrogen6x/nitrogen6x.c:	reg = readl(&mxc_ccm->cs2cdr);
board/boundary/nitrogen6x/nitrogen6x.c:	writel(reg, &mxc_ccm->cs2cdr);
board/boundary/nitrogen6x/nitrogen6x.c:	reg = readl(&mxc_ccm->cscmr2);
board/boundary/nitrogen6x/nitrogen6x.c:	writel(reg, &mxc_ccm->cscmr2);
board/boundary/nitrogen6x/nitrogen6x.c:	reg = readl(&mxc_ccm->chsccdr);
board/boundary/nitrogen6x/nitrogen6x.c:	writel(reg, &mxc_ccm->chsccdr);
board/versalogic/mx6swordtail/mx6swordtail.c:        reg = readl(&ccm->CCGR1);
board/versalogic/mx6swordtail/mx6swordtail.c:        writel(reg, &ccm->CCGR1);
board/versalogic/mx6swordtail/mx6swordtail.c:	reg = readl(&mxc_ccm->CCGR3);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(reg, &mxc_ccm->CCGR3);
board/versalogic/mx6swordtail/mx6swordtail.c:	reg = readl(&mxc_ccm->cs2cdr);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(reg, &mxc_ccm->cs2cdr);
board/versalogic/mx6swordtail/mx6swordtail.c:	reg = readl(&mxc_ccm->cscmr2);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(reg, &mxc_ccm->cscmr2);
board/versalogic/mx6swordtail/mx6swordtail.c:	reg = readl(&mxc_ccm->chsccdr);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(reg, &mxc_ccm->chsccdr);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(0x0030FC03, &ccm->CCGR1);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(0x3FF00000, &ccm->CCGR3);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(0x00FFF300, &ccm->CCGR4);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/versalogic/mx6swordtail/mx6swordtail.c:	writel(0x000003FF, &ccm->CCGR6);
board/versalogic/mx6zebra/mx6zebra.c:	reg = readl(&mxc_ccm->CCGR3);
board/versalogic/mx6zebra/mx6zebra.c:	writel(reg, &mxc_ccm->CCGR3);
board/versalogic/mx6zebra/mx6zebra.c:	reg = readl(&mxc_ccm->cs2cdr);
board/versalogic/mx6zebra/mx6zebra.c:	writel(reg, &mxc_ccm->cs2cdr);
board/versalogic/mx6zebra/mx6zebra.c:	reg = readl(&mxc_ccm->cscmr2);
board/versalogic/mx6zebra/mx6zebra.c:	writel(reg, &mxc_ccm->cscmr2);
board/versalogic/mx6zebra/mx6zebra.c:	reg = readl(&mxc_ccm->chsccdr);
board/versalogic/mx6zebra/mx6zebra.c:	writel(reg, &mxc_ccm->chsccdr);
board/versalogic/mx6zebra/mx6zebra.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/versalogic/mx6zebra/mx6zebra.c:	writel(0x0030FC03, &ccm->CCGR1);
board/versalogic/mx6zebra/mx6zebra.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/versalogic/mx6zebra/mx6zebra.c:	writel(0x3FF00000, &ccm->CCGR3);
board/versalogic/mx6zebra/mx6zebra.c:	writel(0x00FFF300, &ccm->CCGR4);
board/versalogic/mx6zebra/mx6zebra.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/versalogic/mx6zebra/mx6zebra.c:	writel(0x000003FF, &ccm->CCGR6);
board/versalogic/mx6tetra/mx6tetra.c:        reg = readl(&ccm->CCGR1);
board/versalogic/mx6tetra/mx6tetra.c:        writel(reg, &ccm->CCGR1);
board/versalogic/mx6tetra/mx6tetra.c:	reg = readl(&mxc_ccm->CCGR3);
board/versalogic/mx6tetra/mx6tetra.c:	writel(reg, &mxc_ccm->CCGR3);
board/versalogic/mx6tetra/mx6tetra.c:	reg = readl(&mxc_ccm->cs2cdr);
board/versalogic/mx6tetra/mx6tetra.c:	writel(reg, &mxc_ccm->cs2cdr);
board/versalogic/mx6tetra/mx6tetra.c:	reg = readl(&mxc_ccm->cscmr2);
board/versalogic/mx6tetra/mx6tetra.c:	writel(reg, &mxc_ccm->cscmr2);
board/versalogic/mx6tetra/mx6tetra.c:	reg = readl(&mxc_ccm->chsccdr);
board/versalogic/mx6tetra/mx6tetra.c:	writel(reg, &mxc_ccm->chsccdr);
board/versalogic/mx6tetra/mx6tetra.c:	writel(0x00C03F3F, &ccm->CCGR0);
board/versalogic/mx6tetra/mx6tetra.c:	writel(0x0030FC03, &ccm->CCGR1);
board/versalogic/mx6tetra/mx6tetra.c:	writel(0x0FFFC000, &ccm->CCGR2);
board/versalogic/mx6tetra/mx6tetra.c:	writel(0x3FF00000, &ccm->CCGR3);
board/versalogic/mx6tetra/mx6tetra.c:	writel(0x00FFF300, &ccm->CCGR4);
board/versalogic/mx6tetra/mx6tetra.c:	writel(0x0F0000C3, &ccm->CCGR5);
board/versalogic/mx6tetra/mx6tetra.c:	writel(0x000003FF, &ccm->CCGR6);
arch/m68k/cpu/mcf5445x/speed.c:	setbits_be16(&ccm->misccr, CCM_MISCCR_LIMP);
arch/m68k/cpu/mcf5445x/speed.c:	clrbits_be16(&ccm->misccr, CCM_MISCCR_LIMP);
arch/m68k/cpu/mcf5445x/speed.c:	bootmod_ccr = (in_be16(&ccm->ccr) & CCM_CCR_BOOTMOD) >> 14;
arch/m68k/cpu/mcf5445x/speed.c:	setbits_be16(&ccm->misccr2, 0x02);
arch/m68k/cpu/mcf5445x/speed.c:	if (in_be16(&ccm->misccr2) & 2)		/* fsys/4 */
arch/m68k/cpu/mcf5445x/cpu.c:	msk = (in_be16(&ccm->cir) >> 6);
arch/m68k/cpu/mcf5445x/cpu.c:	ver = (in_be16(&ccm->cir) & 0x003f);
arch/m68k/cpu/mcf523x/cpu.c:	out_8(&ccm->rcr, CCM_RCR_SOFTRST);
arch/m68k/cpu/mcf523x/cpu.c:	msk = (in_be16(&ccm->cir) >> 6);
arch/m68k/cpu/mcf523x/cpu.c:	ver = (in_be16(&ccm->cir) & 0x003f);
arch/m68k/cpu/mcf532x/speed.c:	if (in_be16(&ccm->misccr) & CCM_MISCCR_LIMP) {
arch/m68k/cpu/mcf532x/speed.c:		divider = in_be16(&ccm->cdr) & CCM_CDR_LPDIV(0xF);
arch/m68k/cpu/mcf532x/speed.c:	temp = (in_be16(&ccm->cdr) & CCM_CDR_SSIDIV(0xFF));
arch/m68k/cpu/mcf532x/speed.c:	out_be16(&ccm->cdr, CCM_CDR_LPDIV(div) | CCM_CDR_SSIDIV(temp));
arch/m68k/cpu/mcf532x/speed.c:	setbits_be16(&ccm->misccr, CCM_MISCCR_LIMP);
arch/m68k/cpu/mcf532x/speed.c:	clrbits_be16(&ccm->misccr, CCM_MISCCR_LIMP);
arch/m68k/cpu/mcf532x/speed.c:	while (!(in_be16(&ccm->misccr) & CCM_MISCCR_PLL_LOCK))
arch/m68k/cpu/mcf532x/cpu.c:	msk = (in_be16(&ccm->cir) >> 6);
arch/m68k/cpu/mcf532x/cpu.c:	ver = (in_be16(&ccm->cir) & 0x003f);
arch/m68k/cpu/mcf532x/cpu_init.c:		setbits_be16(&ccm->misccr, CCM_MISCCR_FECM);
arch/m68k/cpu/mcf532x/cpu_init.c:		clrbits_be16(&ccm->misccr, CCM_MISCCR_FECM);
arch/m68k/cpu/mcf5227x/speed.c:	clrsetbits_be16(&ccm->cdr, 0x0f00, CCM_CDR_LPDIV(i));
arch/m68k/cpu/mcf5227x/speed.c:	setbits_be16(&ccm->misccr, CCM_MISCCR_LIMP);
arch/m68k/cpu/mcf5227x/speed.c:	clrbits_be16(&ccm->misccr, CCM_MISCCR_LIMP);
arch/m68k/cpu/mcf5227x/speed.c:	if ((in_be16(&ccm->ccr) & CCM_MISCCR_LIMP) == CCM_MISCCR_LIMP) {
arch/m68k/cpu/mcf5227x/cpu.c:	msk = (in_be16(&ccm->cir) >> 6);
arch/m68k/cpu/mcf5227x/cpu.c:	ver = (in_be16(&ccm->cir) & 0x003f);
arch/powerpc/cpu/mpc85xx/mp.c:	out_be32(&ccm->bstrl, bootpg);
arch/powerpc/cpu/mpc85xx/mp.c:	out_be32(&ccm->bstrar, LAW_EN | e.trgt_id << 20 | brsize);
arch/powerpc/cpu/mpc85xx/mp.c:	in_be32(&ccm->bstrar);
arch/powerpc/cpu/mpc85xx/mp.c:	clrbits_be32(&ccm->bstrar, LAW_EN);
arch/arm/mach-sunxi/clock_sun6i.c:	writel(GENMASK(12, 0), &ccm->pll_lock_ctrl);
arch/arm/mach-sunxi/clock_sun6i.c:	writel(PLL6_CFG_DEFAULT, &ccm->pll6_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	while (!(readl(&ccm->pll6_cfg) & CCM_PLL6_CTRL_LOCK))
arch/arm/mach-sunxi/clock_sun6i.c:	writel(AHB1_ABP1_DIV_DEFAULT, &ccm->ahb1_apb1_div);
arch/arm/mach-sunxi/clock_sun6i.c:		writel(MBUS_CLK_DEFAULT, &ccm->mbus0_clk_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:			writel(MBUS_CLK_DEFAULT, &ccm->mbus1_clk_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	setbits_le32(&ccm->sata_pll_cfg, CCM_SATA_PLL_DEFAULT);
arch/arm/mach-sunxi/clock_sun6i.c:	setbits_le32(&ccm->ahb_reset0_cfg, 0x1 << AHB_GATE_OFFSET_SATA);
arch/arm/mach-sunxi/clock_sun6i.c:	setbits_le32(&ccm->ahb_gate0, 0x1 << AHB_GATE_OFFSET_SATA);
arch/arm/mach-sunxi/clock_sun6i.c:	setbits_le32(&ccm->sata_clk_cfg, CCM_SATA_CTRL_ENABLE);
arch/arm/mach-sunxi/clock_sun6i.c:	setbits_le32(&ccm->ccu_sec_switch,
arch/arm/mach-sunxi/clock_sun6i.c:		setbits_le32(&ccm->apb1_gate,
arch/arm/mach-sunxi/clock_sun6i.c:		setbits_le32(&ccm->apb1_reset_cfg,
arch/arm/mach-sunxi/clock_sun6i.c:		       &ccm->apb2_div);
arch/arm/mach-sunxi/clock_sun6i.c:		setbits_le32(&ccm->apb2_gate,
arch/arm/mach-sunxi/clock_sun6i.c:		setbits_le32(&ccm->apb2_reset_cfg,
arch/arm/mach-sunxi/clock_sun6i.c:		       &ccm->cpu_axi_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:		       &ccm->cpu_axi_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	       CCM_PLL1_CTRL_K(k) | CCM_PLL1_CTRL_M(m), &ccm->pll1_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:		       &ccm->cpu_axi_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:		       &ccm->cpu_axi_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:		clrbits_le32(&ccm->pll3_cfg, CCM_PLL3_CTRL_EN);
arch/arm/mach-sunxi/clock_sun6i.c:	       &ccm->pll3_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	       &ccm->pll3_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	while (!(readl(&ccm->pll3_cfg) & CCM_PLL3_CTRL_LOCK))
arch/arm/mach-sunxi/clock_sun6i.c:	clrsetbits_le32(&ccm->pll5_tuning_cfg, CCM_PLL5_TUN_LOCK_TIME_MASK |
arch/arm/mach-sunxi/clock_sun6i.c:		writel(CCM_PLL5_PATTERN, &ccm->pll5_pattern_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	       CCM_PLL5_CTRL_K(k) | CCM_PLL5_CTRL_M(m), &ccm->pll5_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	       CCM_MIPI_PLL_CTRL_M(best_m), &ccm->mipi_pll_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:		clrbits_le32(&ccm->pll10_cfg, CCM_PLL10_CTRL_EN);
arch/arm/mach-sunxi/clock_sun6i.c:	       &ccm->pll10_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	while (!(readl(&ccm->pll10_cfg) & CCM_PLL10_CTRL_LOCK))
arch/arm/mach-sunxi/clock_sun6i.c:		writel(CCM_PLL11_PATTERN, &ccm->pll11_pattern_cfg0);
arch/arm/mach-sunxi/clock_sun6i.c:	       CCM_PLL11_CTRL_N(clk / 24000000), &ccm->pll11_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	while (readl(&ccm->pll11_cfg) & CCM_PLL11_CTRL_UPD)
arch/arm/mach-sunxi/clock_sun6i.c:	uint32_t rval = readl(&ccm->pll3_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	uint32_t rval = readl(&ccm->pll6_cfg);
arch/arm/mach-sunxi/clock_sun6i.c:	uint32_t rval = readl(&ccm->mipi_pll_cfg);
arch/arm/mach-sunxi/dram_sun6i.c:	clrsetbits_le32(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_DIV0_MASK,
arch/arm/mach-sunxi/dram_sun6i.c:	mctl_await_completion(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_UPD, 0);
arch/arm/mach-sunxi/dram_sun6i.c:	writel(MDFS_CLK_DEFAULT, &ccm->mdfs_clk_cfg);
arch/arm/mach-sunxi/dram_sun6i.c:	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun6i.c:	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun6i.c:	setbits_le32(&ccm->axi_gate, 1 << AXI_GATE_OFFSET_DRAM);
arch/arm/mach-sunxi/dram_sun9i.c:	clrbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun9i.c:	clrbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun9i.c:	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun9i.c:	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun9i.c:	writel((3 << 12) | (1 << 16), &ccm->dram_clk_cfg);
arch/arm/mach-sunxi/dram_sun9i.c:	} while (readl(&ccm->dram_clk_cfg) & (1 << 16));
arch/arm/mach-sunxi/dram_sun9i.c:	setbits_le32(&ccm->dram_clk_cfg, (1 << 31));
arch/arm/mach-sunxi/dram_sun50i_h6.c:	clrbits_le32(&ccm->mbus_cfg, MBUS_ENABLE | MBUS_RESET);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	clrbits_le32(&ccm->dram_gate_reset, BIT(0));
arch/arm/mach-sunxi/dram_sun50i_h6.c:	writel(0, &ccm->dram_gate_reset);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	clrbits_le32(&ccm->pll5_cfg, CCM_PLL5_CTRL_EN);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	clrbits_le32(&ccm->dram_clk_cfg, DRAM_MOD_RESET);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	       CCM_PLL5_CTRL_N(para->clk * 2 / 24), &ccm->pll5_cfg);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	mctl_await_completion(&ccm->pll5_cfg, CCM_PLL5_LOCK, CCM_PLL5_LOCK);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	writel(DRAM_CLK_SRC_PLL5, &ccm->dram_clk_cfg);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	setbits_le32(&ccm->dram_clk_cfg, DRAM_CLK_UPDATE);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	writel(BIT(RESET_SHIFT), &ccm->dram_gate_reset);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	setbits_le32(&ccm->dram_gate_reset, BIT(0));
arch/arm/mach-sunxi/dram_sun50i_h6.c:	setbits_le32(&ccm->mbus_cfg, MBUS_RESET);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	setbits_le32(&ccm->mbus_cfg, MBUS_ENABLE);
arch/arm/mach-sunxi/dram_sun50i_h6.c:	setbits_le32(&ccm->dram_clk_cfg, DRAM_MOD_RESET);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	clrbits_le32(&ccm->mbus_cfg, MBUS_ENABLE);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	clrbits_le32(&ccm->mbus_cfg, MBUS_RESET);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	clrbits_le32(&ccm->dram_gate_reset, BIT(GATE_SHIFT));
arch/arm/mach-sunxi/dram_sun50i_h616.c:	clrbits_le32(&ccm->dram_gate_reset, BIT(RESET_SHIFT));
arch/arm/mach-sunxi/dram_sun50i_h616.c:	clrbits_le32(&ccm->pll5_cfg, CCM_PLL5_CTRL_EN);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	clrbits_le32(&ccm->dram_clk_cfg, DRAM_MOD_RESET);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	       CCM_PLL5_CTRL_N(para->clk * 2 / 24), &ccm->pll5_cfg);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	mctl_await_completion(&ccm->pll5_cfg, CCM_PLL5_LOCK, CCM_PLL5_LOCK);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	writel(DRAM_CLK_SRC_PLL5, &ccm->dram_clk_cfg);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	writel(BIT(RESET_SHIFT), &ccm->dram_gate_reset);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	setbits_le32(&ccm->dram_gate_reset, BIT(GATE_SHIFT));
arch/arm/mach-sunxi/dram_sun50i_h616.c:	setbits_le32(&ccm->mbus_cfg, MBUS_RESET);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	setbits_le32(&ccm->mbus_cfg, MBUS_ENABLE);
arch/arm/mach-sunxi/dram_sun50i_h616.c:	setbits_le32(&ccm->dram_clk_cfg, DRAM_MOD_RESET);
arch/arm/mach-sunxi/clock_sun9i.c:	       C0_CFG_APB0_CLK_DIV_RATIO(2), &ccm->c0_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->ahb0_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->ahb1_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->ahb2_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->apb0_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->gtbus_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->cci400_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	setbits_le32(&ccm->ahb_reset1_cfg, (1 << 24));
arch/arm/mach-sunxi/clock_sun9i.c:	setbits_le32(&ccm->apb1_gate, (1 << 24));
arch/arm/mach-sunxi/clock_sun9i.c:	setbits_le32(&ccm->apb1_gate,
arch/arm/mach-sunxi/clock_sun9i.c:	setbits_le32(&ccm->apb1_reset_cfg,
arch/arm/mach-sunxi/clock_sun9i.c:	clrsetbits_le32(&ccm->cpu_clk_source, C0_CPUX_CLK_SRC_MASK,
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->pll1_c0_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	clrsetbits_le32(&ccm->cpu_clk_source, C0_CPUX_CLK_SRC_MASK,
arch/arm/mach-sunxi/clock_sun9i.c:	clrsetbits_le32(&ccm->cpu_clk_source, C1_CPUX_CLK_SRC_MASK,
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->pll2_c1_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	clrsetbits_le32(&ccm->cpu_clk_source, C1_CPUX_CLK_SRC_MASK,
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->pll6_ddr_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	do { } while (!(readl(&ccm->pll_stable_status) & PLL_DDR_STATUS));
arch/arm/mach-sunxi/clock_sun9i.c:	if (readl(&ccm->pll12_periph1_cfg) & CCM_PLL12_CTRL_EN)
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->pll12_periph1_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:	       &ccm->pll4_periph0_cfg);
arch/arm/mach-sunxi/clock_sun9i.c:		setbits_le32(&ccm->apb1_gate,
arch/arm/mach-sunxi/clock_sun9i.c:		setbits_le32(&ccm->apb1_reset_cfg,
arch/arm/mach-sunxi/clock_sun9i.c:		clrbits_le32(&ccm->apb1_reset_cfg,
arch/arm/mach-sunxi/clock_sun9i.c:		clrbits_le32(&ccm->apb1_gate,
arch/arm/mach-sunxi/clock_sun9i.c:	uint32_t rval = readl(&ccm->pll4_periph0_cfg);
arch/arm/mach-sunxi/cpu_info.c:	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_SS);
arch/arm/mach-sunxi/cpu_info.c:	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_SS);
arch/arm/mach-sunxi/cpu_info.c:	clrbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_SS);
arch/arm/mach-sunxi/cpu_info.c:	clrbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_SS);
arch/arm/mach-sunxi/dram_sun4i.c:	reg_val = readl(&ccm->pll5_cfg);
arch/arm/mach-sunxi/dram_sun4i.c:	writel(reg_val, &ccm->pll5_cfg);
arch/arm/mach-sunxi/dram_sun4i.c:	setbits_le32(&ccm->pll5_cfg, CCM_PLL5_CTRL_DDR_CLK);
arch/arm/mach-sunxi/dram_sun4i.c:	clrbits_le32(&ccm->gps_clk_cfg, CCM_GPS_CTRL_RESET | CCM_GPS_CTRL_GATE);
arch/arm/mach-sunxi/dram_sun4i.c:	setbits_le32(&ccm->ahb_gate0, CCM_AHB_GATE_GPS);
arch/arm/mach-sunxi/dram_sun4i.c:	clrbits_le32(&ccm->ahb_gate0, CCM_AHB_GATE_GPS);
arch/arm/mach-sunxi/dram_sun4i.c:	writel(reg_val, &ccm->mbus_clk_cfg);
arch/arm/mach-sunxi/dram_sun4i.c:	clrbits_le32(&ccm->ahb_gate0, CCM_AHB_GATE_SDRAM | CCM_AHB_GATE_DLL);
arch/arm/mach-sunxi/dram_sun4i.c:	clrbits_le32(&ccm->ahb_gate0, CCM_AHB_GATE_SDRAM);
arch/arm/mach-sunxi/dram_sun4i.c:	setbits_le32(&ccm->ahb_gate0, CCM_AHB_GATE_SDRAM | CCM_AHB_GATE_DLL);
arch/arm/mach-sunxi/dram_sun4i.c:	setbits_le32(&ccm->ahb_gate0, CCM_AHB_GATE_SDRAM);
arch/arm/mach-sunxi/dram_sun4i.c:		setbits_le32(&ccm->dram_clk_gate, CCM_DRAM_CTRL_DCLK_OUT);
arch/arm/mach-sunxi/dram_sun4i.c:		clrbits_le32(&ccm->dram_clk_gate, CCM_DRAM_CTRL_DCLK_OUT);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	writel(PLL8_CFG_DEFAULT, &ccm->pll8_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	writel(readl(&ccm->pll8_cfg) | (0x1 << 31), &ccm->pll8_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	while (!(readl(&ccm->pll_stable_status) & (1 << 8))) {}
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	writel(0x0, &ccm->cci400_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	writel(CCM_CCI400_CLK_SEL_HSIC, &ccm->cci400_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	clrsetbits_le32(&ccm->ahb1_apb1_div, AHB1_CLK_SRC_MASK,
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	writel(PLL6_CFG_DEFAULT, &ccm->pll6_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	while (!(readl(&ccm->pll_stable_status) & (1 << 6))) {}
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	writel(AHB1_ABP1_DIV_DEFAULT, &ccm->ahb1_apb1_div);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	writel(CCM_MBUS_RESET_RESET, &ccm->mbus_reset);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	writel(MBUS_CLK_DEFAULT, &ccm->mbus_clk_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	       &ccm->apb2_div);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	setbits_le32(&ccm->apb2_gate,
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	setbits_le32(&ccm->apb2_reset_cfg,
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	       &ccm->cpu_axi_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:		&ccm->pll1_c0_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	while (!(readl(&ccm->pll_stable_status) & 0x01)) {}
arch/arm/mach-sunxi/clock_sun8i_a83t.c:		&ccm->pll1_c1_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	while (!(readl(&ccm->pll_stable_status) & 0x02)) {}
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	       &ccm->cpu_axi_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:			div1 << CCM_PLL5_DIV1_SHIFT, &ccm->pll5_cfg);
arch/arm/mach-sunxi/clock_sun8i_a83t.c:	uint32_t rval = readl(&ccm->pll6_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	       &ccm->cpu_ahb_apb0_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	writel(PLL1_CFG_DEFAULT, &ccm->pll1_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	       &ccm->cpu_ahb_apb0_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	setbits_le32(&ccm->ahb_gate0, 0x1 << AHB_GATE_OFFSET_DMA);
arch/arm/mach-sunxi/clock_sun4i.c:	writel(PLL6_CFG_DEFAULT, &ccm->pll6_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	setbits_le32(&ccm->ahb_gate0, 0x1 << AHB_GATE_OFFSET_SATA);
arch/arm/mach-sunxi/clock_sun4i.c:	setbits_le32(&ccm->pll6_cfg, 0x1 << CCM_PLL6_CTRL_SATA_EN_SHIFT);
arch/arm/mach-sunxi/clock_sun4i.c:	       &ccm->apb1_clk_div_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	setbits_le32(&ccm->apb1_gate,
arch/arm/mach-sunxi/clock_sun4i.c:		setbits_le32(&ccm->apb1_gate,
arch/arm/mach-sunxi/clock_sun4i.c:		clrbits_le32(&ccm->apb1_gate,
arch/arm/mach-sunxi/clock_sun4i.c:	       &ccm->cpu_ahb_apb0_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	       &ccm->cpu_ahb_apb0_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	writel(pll1_para[i].pll1_cfg, &ccm->pll1_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	       &ccm->cpu_ahb_apb0_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:		clrbits_le32(&ccm->pll3_cfg, CCM_PLL3_CTRL_EN);
arch/arm/mach-sunxi/clock_sun4i.c:	       CCM_PLL3_CTRL_M(clk / 3000000), &ccm->pll3_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	uint32_t rval = readl(&ccm->pll3_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	uint32_t rval = readl(&ccm->pll5_cfg);
arch/arm/mach-sunxi/clock_sun4i.c:	uint32_t rval = readl(&ccm->pll6_cfg);
arch/arm/mach-sunxi/dram_suniv.c:		writel(0xd1303333, &ccm->pll5_pattern_cfg);
arch/arm/mach-sunxi/dram_suniv.c:		writel(0xcce06666, &ccm->pll5_pattern_cfg);
arch/arm/mach-sunxi/dram_suniv.c:		writel(0xc8909999, &ccm->pll5_pattern_cfg);
arch/arm/mach-sunxi/dram_suniv.c:		writel(0xc440cccc, &ccm->pll5_pattern_cfg);
arch/arm/mach-sunxi/dram_suniv.c:	writel(val, &ccm->pll5_cfg);
arch/arm/mach-sunxi/dram_suniv.c:	setbits_le32(&ccm->pll5_cfg, CCM_PLL5_CTRL_UPD);
arch/arm/mach-sunxi/dram_suniv.c:	mctl_await_completion(&ccm->pll5_cfg, BIT(28), BIT(28));
arch/arm/mach-sunxi/dram_suniv.c:	setbits_le32(&ccm->ahb_gate0, (1 << AHB_GATE_OFFSET_MCTL));
arch/arm/mach-sunxi/dram_suniv.c:	clrbits_le32(&ccm->ahb_reset0_cfg, (1 << AHB_RESET_OFFSET_MCTL));
arch/arm/mach-sunxi/dram_suniv.c:	setbits_le32(&ccm->ahb_reset0_cfg, (1 << AHB_RESET_OFFSET_MCTL));
arch/arm/mach-sunxi/clock.c:		setbits_le32(&ccm->apb2_gate,
arch/arm/mach-sunxi/clock.c:		setbits_le32(&ccm->apb2_reset_cfg,
arch/arm/mach-sunxi/clock.c:		clrbits_le32(&ccm->apb2_reset_cfg,
arch/arm/mach-sunxi/clock.c:		clrbits_le32(&ccm->apb2_gate,
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	clrbits_le32(&ccm->mbus_clk_cfg, MBUS_CLK_GATE);
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	clrbits_le32(&ccm->mbus_reset, CCM_MBUS_RESET_RESET);
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	clrbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	clrbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	clrbits_le32(&ccm->pll5_cfg, CCM_PLL5_CTRL_EN);
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	clrbits_le32(&ccm->dram_clk_cfg, 0x01<<31);
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	clrsetbits_le32(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_DIV_MASK,
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	mctl_await_completion(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_UPD, 0);
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	setbits_le32(&ccm->mbus_reset, CCM_MBUS_RESET_RESET);
arch/arm/mach-sunxi/dram_sun8i_a83t.c:	setbits_le32(&ccm->mbus_clk_cfg, MBUS_CLK_GATE);
arch/arm/mach-sunxi/dram_sun8i_a23.c:	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun8i_a23.c:	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun8i_a23.c:	setbits_le32(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_RST);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	clrbits_le32(&ccm->mbus0_clk_cfg, MBUS_CLK_GATE);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	clrbits_le32(&ccm->mbus_reset, CCM_MBUS_RESET_RESET);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	clrbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	clrbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	clrbits_le32(&ccm->pll5_cfg, CCM_PLL5_CTRL_EN);
arch/arm/mach-sunxi/dram_sunxi_dw.c:		clrbits_le32(&ccm->pll11_cfg, CCM_PLL11_CTRL_EN);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	clrbits_le32(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_RST);
arch/arm/mach-sunxi/dram_sunxi_dw.c:		clrsetbits_le32(&ccm->dram_clk_cfg,
arch/arm/mach-sunxi/dram_sunxi_dw.c:		clrsetbits_le32(&ccm->dram_clk_cfg,
arch/arm/mach-sunxi/dram_sunxi_dw.c:	mctl_await_completion(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_UPD, 0);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	setbits_le32(&ccm->mbus_reset, CCM_MBUS_RESET_RESET);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	setbits_le32(&ccm->mbus0_clk_cfg, MBUS_CLK_GATE);
arch/arm/mach-sunxi/dram_sunxi_dw.c:	setbits_le32(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_RST);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	writel(CCM_PLL6_DEFAULT, &ccm->pll6_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	while (!(readl(&ccm->pll6_cfg) & CCM_PLL6_LOCK))
arch/arm/mach-sunxi/clock_sun50i_h6.c:	clrsetbits_le32(&ccm->cpu_axi_cfg, CCM_CPU_AXI_APB_MASK | CCM_CPU_AXI_AXI_MASK,
arch/arm/mach-sunxi/clock_sun50i_h6.c:	writel(CCM_PSI_AHB1_AHB2_DEFAULT, &ccm->psi_ahb1_ahb2_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	writel(CCM_AHB3_DEFAULT, &ccm->ahb3_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	writel(CCM_APB1_DEFAULT, &ccm->apb1_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	writel(MBUS_CLK_SRC_PLL6X2 | MBUS_CLK_M(3), &ccm->mbus_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	       &ccm->apb2_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	setbits_le32(&ccm->uart_gate_reset,
arch/arm/mach-sunxi/clock_sun50i_h6.c:	setbits_le32(&ccm->uart_gate_reset,
arch/arm/mach-sunxi/clock_sun50i_h6.c:	val = readl(&ccm->cpu_axi_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	writel(val, &ccm->cpu_axi_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	       CCM_PLL1_CTRL_N(clk / 24000000), &ccm->pll1_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	while (!(readl(&ccm->pll1_cfg) & CCM_PLL1_LOCK)) {}
arch/arm/mach-sunxi/clock_sun50i_h6.c:	val = readl(&ccm->cpu_axi_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	writel(val, &ccm->cpu_axi_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:	uint32_t rval = readl(&ccm->pll6_cfg);
arch/arm/mach-sunxi/clock_sun50i_h6.c:		ptr = &ccm->twi_gate_reset;
arch/arm/mach-sunxi/dram_sun8i_a33.c:	clrsetbits_le32(&ccm->dram_pll_cfg, CCM_DRAMPLL_CFG_SRC_MASK,
arch/arm/mach-sunxi/dram_sun8i_a33.c:	clrsetbits_le32(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_DIV_MASK,
arch/arm/mach-sunxi/dram_sun8i_a33.c:	mctl_await_completion(&ccm->dram_clk_cfg, CCM_DRAMCLK_CFG_UPD, 0);
arch/arm/mach-sunxi/dram_sun8i_a33.c:	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun8i_a33.c:	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MCTL);
arch/arm/mach-sunxi/dram_sun8i_a33.c:	setbits_le32(&ccm->mbus_reset, CCM_MBUS_RESET_RESET);
arch/arm/mach-sunxi/dram_sun8i_a33.c:	setbits_le32(&ccm->mbus0_clk_cfg, MBUS_CLK_GATE);
arch/arm/cpu/armv7/vf610/generic.c:	reg = readl(&ccm->ccgr6);
arch/arm/cpu/armv7/vf610/generic.c:	writel(reg, &ccm->ccgr6);
arch/arm/cpu/armv7/vf610/generic.c:	ccm_ccsr = readl(&ccm->ccsr);
arch/arm/cpu/armv7/vf610/generic.c:	ccm_cacrr = readl(&ccm->cacrr);
arch/arm/cpu/armv7/vf610/generic.c:	ccm_cacrr = readl(&ccm->cacrr);
arch/arm/cpu/armv7/vf610/generic.c:	ccm_cacrr = readl(&ccm->cacrr);
arch/arm/cpu/armv7/vf610/generic.c:	ccm_cscmr1 = readl(&ccm->cscmr1);
arch/arm/cpu/armv7/vf610/generic.c:	ccm_cscdr2 = readl(&ccm->cscdr2);
arch/arm/cpu/armv7/vf610/generic.c:	ccm_cscmr2 = readl(&ccm->cscmr2);
arch/arm/cpu/armv7/vf610/generic.c:		clrsetbits_le32(&ccm->ccgr4, CCM_CCGR4_I2C0_CTRL_MASK,
arch/arm/cpu/armv7/vf610/generic.c:		clrsetbits_le32(&ccm->ccgr10, CCM_CCGR10_I2C2_CTRL_MASK,
arch/arm/cpu/arm1136/mx31/generic.c:	u32 cause = readl(&ccm->rcsr) & 0x07;
arch/arm/mach-imx/cpu.c:	reg = __raw_readl(&imx_ccm->cbcdr);
arch/arm/mach-imx/mx5/clock.c:	clrsetbits_le32(&mxc_ccm->cscmr1,
arch/arm/mach-imx/mx5/clock.c:	clrsetbits_le32(&mxc_ccm->cscdr1,
arch/arm/mach-imx/mx5/clock.c:	clrsetbits_le32(&mxc_ccm->CCGR2,
arch/arm/mach-imx/mx5/clock.c:		setbits_le32(&mxc_ccm->CCGR1, mask);
arch/arm/mach-imx/mx5/clock.c:		clrbits_le32(&mxc_ccm->CCGR1, mask);
arch/arm/mach-imx/mx5/clock.c:	clrbits_le32(&mxc_ccm->cscmr1, MXC_CCM_CSCMR1_USB_PHY_CLK_SEL);
arch/arm/mach-imx/mx5/clock.c:	clrsetbits_le32(&mxc_ccm->CCGR2,
arch/arm/mach-imx/mx5/clock.c:	clrsetbits_le32(&mxc_ccm->CCGR4,
arch/arm/mach-imx/mx5/clock.c:	clrsetbits_le32(&mxc_ccm->CCGR4,
arch/arm/mach-imx/mx5/clock.c:	u32 ccr = readl(&mxc_ccm->ccr);
arch/arm/mach-imx/mx5/clock.c:	u32 ccsr = readl(&mxc_ccm->ccsr);
arch/arm/mach-imx/mx5/clock.c:	reg = MXC_CCM_CACRR_ARM_PODF_RD(readl(&mxc_ccm->cacrr));
arch/arm/mach-imx/mx5/clock.c:	reg = readl(&mxc_ccm->cbcdr);
arch/arm/mach-imx/mx5/clock.c:	reg = readl(&mxc_ccm->cbcmr);
arch/arm/mach-imx/mx5/clock.c:	reg = readl(&mxc_ccm->cbcdr);
arch/arm/mach-imx/mx5/clock.c:	if (readl(&mxc_ccm->cbcmr) & MXC_CCM_CBCMR_PERCLK_IPG_CLK_SEL)
arch/arm/mach-imx/mx5/clock.c:	if (readl(&mxc_ccm->cbcmr) & MXC_CCM_CBCMR_PERCLK_LP_APM_CLK_SEL)
arch/arm/mach-imx/mx5/clock.c:	podf = readl(&mxc_ccm->cbcdr);
arch/arm/mach-imx/mx5/clock.c:	reg = readl(&mxc_ccm->cscmr1);
arch/arm/mach-imx/mx5/clock.c:	reg = readl(&mxc_ccm->cscdr1);
arch/arm/mach-imx/mx5/clock.c:	u32 cscmr1 = readl(&mxc_ccm->cscmr1);
arch/arm/mach-imx/mx5/clock.c:	u32 cscdr2 = readl(&mxc_ccm->cscdr2);
arch/arm/mach-imx/mx5/clock.c:	u32 cscmr1 = readl(&mxc_ccm->cscmr1);
arch/arm/mach-imx/mx5/clock.c:	u32 cscdr1 = readl(&mxc_ccm->cscdr1);
arch/arm/mach-imx/mx5/clock.c:	u32 cbcdr = readl(&mxc_ccm->cbcdr);
arch/arm/mach-imx/mx5/clock.c:	u32 cbcdr = readl(&mxc_ccm->cbcdr);
arch/arm/mach-imx/mx5/clock.c:	u32 cbcdr = readl(&mxc_ccm->cbcdr);
arch/arm/mach-imx/mx5/clock.c:	u32 cbcmr = readl(&mxc_ccm->cbcmr);
arch/arm/mach-imx/mx5/clock.c:	u32 cbcdr = readl(&mxc_ccm->cbcdr);
arch/arm/mach-imx/mx5/clock.c:	u32 ccsr = readl(&mxc_ccm->ccsr);
arch/arm/mach-imx/mx5/clock.c:				&mxc_ccm->ccsr);
arch/arm/mach-imx/mx5/clock.c:				&mxc_ccm->ccsr);
arch/arm/mach-imx/mx5/clock.c:				&mxc_ccm->ccsr);
arch/arm/mach-imx/mx5/clock.c:				&mxc_ccm->ccsr);
arch/arm/mach-imx/mx5/clock.c:				&mxc_ccm->ccsr);
arch/arm/mach-imx/mx5/clock.c:				&mxc_ccm->ccsr);
arch/arm/mach-imx/mx5/clock.c:				&mxc_ccm->ccsr);
arch/arm/mach-imx/mx5/clock.c:				&mxc_ccm->ccsr);
arch/arm/mach-imx/mx5/clock.c:	clrsetbits_le32(&mxc_ccm->cbcdr,
arch/arm/mach-imx/mx5/clock.c:	while (readl(&mxc_ccm->cdhipr) != 0)
arch/arm/mach-imx/mx5/clock.c:	clrsetbits_le32(&mxc_ccm->CCGR5,
arch/arm/mach-imx/mx5/clock.c:		setbits_le32(&mxc_ccm->cgpr,
arch/arm/mach-imx/mx5/clock.c:		clrbits_le32(&mxc_ccm->cgpr,
arch/arm/mach-imx/mx5/clock.c:	if (readl(&mxc_ccm->cbcdr) & MXC_CCM_CBCDR_PERIPH_CLK_SEL) {
arch/arm/mach-imx/mx5/clock.c:				readl(&mxc_ccm->cbcmr))) {
arch/arm/mach-imx/mx5/clock.c:	u32 cbcmr = readl(&mxc_ccm->cbcmr);
arch/arm/mach-imx/mx5/clock.c:	clrsetbits_le32(&mxc_ccm->cbcdr, 0x7 << shift, (div - 1) << shift);
arch/arm/mach-imx/mx5/clock.c:	while (readl(&mxc_ccm->cdhipr) != 0)
arch/arm/mach-imx/mx5/clock.c:	writel(0x0, &mxc_ccm->ccdr);
arch/arm/mach-imx/mx6/soc.c:	reg = readl(&mxc_ccm->cbcdr);
arch/arm/mach-imx/mx6/soc.c:		(div << MXC_CCM_CBCDR_AHB_PODF_OFFSET), &mxc_ccm->cbcdr);
arch/arm/mach-imx/mx6/soc.c:	reg = readl(&mxc_ccm->ccdr);
arch/arm/mach-imx/mx6/soc.c:	writel(reg, &mxc_ccm->ccdr);
arch/arm/mach-imx/mx6/soc.c:		setbits_le32(&ccm->cscmr1, MXC_CCM_CSCMR1_PER_CLK_SEL_MASK);
arch/arm/mach-imx/mx6/soc.c:		setbits_le32(&ccm->cscdr1, MXC_CCM_CSCDR1_UART_CLK_SEL);
arch/arm/mach-imx/mx6/soc.c:	reg = readl(&ccm->cbcmr);
arch/arm/mach-imx/mx6/soc.c:	reg = readl(&mxc_ccm->CCGR2);
arch/arm/mach-imx/mx6/soc.c:	writel(reg, &mxc_ccm->CCGR2);
arch/arm/mach-imx/mx6/soc.c:	reg = readl(&mxc_ccm->chsccdr);
arch/arm/mach-imx/mx6/soc.c:	writel(reg, &mxc_ccm->chsccdr);
arch/arm/mach-imx/mx6/soc.c:		writel(0x1, &mxc_ccm->cacrr);
arch/arm/mach-imx/mx6/soc.c:		writel(arm_orig_podf, &mxc_ccm->cacrr);
arch/arm/mach-imx/mx6/soc.c:	arm_orig_podf = readl(&mxc_ccm->cacrr);
arch/arm/mach-imx/mx6/opos6ul.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
arch/arm/mach-imx/mx6/opos6ul.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
arch/arm/mach-imx/mx6/opos6ul.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
arch/arm/mach-imx/mx6/opos6ul.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
arch/arm/mach-imx/mx6/opos6ul.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
arch/arm/mach-imx/mx6/opos6ul.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
arch/arm/mach-imx/mx6/opos6ul.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
arch/arm/mach-imx/mx6/opos6ul.c:	writel(0xFFFFFFFF, &ccm->CCGR7);
arch/arm/mach-imx/mx6/litesom.c:	writel(0xFFFFFFFF, &ccm->CCGR0);
arch/arm/mach-imx/mx6/litesom.c:	writel(0xFFFFFFFF, &ccm->CCGR1);
arch/arm/mach-imx/mx6/litesom.c:	writel(0xFFFFFFFF, &ccm->CCGR2);
arch/arm/mach-imx/mx6/litesom.c:	writel(0xFFFFFFFF, &ccm->CCGR3);
arch/arm/mach-imx/mx6/litesom.c:	writel(0xFFFFFFFF, &ccm->CCGR4);
arch/arm/mach-imx/mx6/litesom.c:	writel(0xFFFFFFFF, &ccm->CCGR5);
arch/arm/mach-imx/mx6/litesom.c:	writel(0xFFFFFFFF, &ccm->CCGR6);
arch/arm/mach-imx/mx6/litesom.c:	writel(0xFFFFFFFF, &ccm->CCGR7);
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->CCGR2);
arch/arm/mach-imx/mx6/clock.c:	__raw_writel(reg, &imx_ccm->CCGR2);
arch/arm/mach-imx/mx6/clock.c:	clrbits_le32(&imx_ccm->CCGR4,
arch/arm/mach-imx/mx6/clock.c:	clrbits_le32(&imx_ccm->CCGR4, MXC_CCM_CCGR4_QSPI2_ENFC_MASK);
arch/arm/mach-imx/mx6/clock.c:	clrsetbits_le32(&imx_ccm->cs2cdr,
arch/arm/mach-imx/mx6/clock.c:	setbits_le32(&imx_ccm->CCGR4, MXC_CCM_CCGR4_QSPI2_ENFC_MASK);
arch/arm/mach-imx/mx6/clock.c:	clrsetbits_le32(&imx_ccm->cs2cdr,
arch/arm/mach-imx/mx6/clock.c:	clrbits_le32(&imx_ccm->CCGR2, MXC_CCM_CCGR2_IOMUX_IPT_CLK_IO_MASK);
arch/arm/mach-imx/mx6/clock.c:	clrsetbits_le32(&imx_ccm->cs2cdr,
arch/arm/mach-imx/mx6/clock.c:	setbits_le32(&imx_ccm->CCGR2, MXC_CCM_CCGR2_IOMUX_IPT_CLK_IO_MASK);
arch/arm/mach-imx/mx6/clock.c:	setbits_le32(&imx_ccm->CCGR4,
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->CCGR6);
arch/arm/mach-imx/mx6/clock.c:	__raw_writel(reg, &imx_ccm->CCGR6);
arch/arm/mach-imx/mx6/clock.c:		addr = &imx_ccm->CCGR0;
arch/arm/mach-imx/mx6/clock.c:		addr = &imx_ccm->CCGR3;
arch/arm/mach-imx/mx6/clock.c:		addr = &imx_ccm->CCGR1;
arch/arm/mach-imx/mx6/clock.c:		setbits_le32(&imx_ccm->CCGR5, mask);
arch/arm/mach-imx/mx6/clock.c:		clrbits_le32(&imx_ccm->CCGR5, mask);
arch/arm/mach-imx/mx6/clock.c:		setbits_le32(&imx_ccm->CCGR6, mask);
arch/arm/mach-imx/mx6/clock.c:		clrbits_le32(&imx_ccm->CCGR6, mask);
arch/arm/mach-imx/mx6/clock.c:		reg = __raw_readl(&imx_ccm->CCGR2);
arch/arm/mach-imx/mx6/clock.c:		__raw_writel(reg, &imx_ccm->CCGR2);
arch/arm/mach-imx/mx6/clock.c:			addr = &imx_ccm->CCGR6;
arch/arm/mach-imx/mx6/clock.c:			addr = &imx_ccm->CCGR1;
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->CCGR1);
arch/arm/mach-imx/mx6/clock.c:	__raw_writel(reg, &imx_ccm->CCGR1);
arch/arm/mach-imx/mx6/clock.c:		div = __raw_readl(&imx_ccm->analog_pll_sys);
arch/arm/mach-imx/mx6/clock.c:		div = __raw_readl(&imx_ccm->analog_pll_528);
arch/arm/mach-imx/mx6/clock.c:		div = __raw_readl(&imx_ccm->analog_usb1_pll_480_ctrl);
arch/arm/mach-imx/mx6/clock.c:		div = __raw_readl(&imx_ccm->analog_pll_enet);
arch/arm/mach-imx/mx6/clock.c:		div = __raw_readl(&imx_ccm->analog_pll_audio);
arch/arm/mach-imx/mx6/clock.c:		pll_num = __raw_readl(&imx_ccm->analog_pll_audio_num);
arch/arm/mach-imx/mx6/clock.c:		pll_denom = __raw_readl(&imx_ccm->analog_pll_audio_denom);
arch/arm/mach-imx/mx6/clock.c:		div = __raw_readl(&imx_ccm->analog_pll_video);
arch/arm/mach-imx/mx6/clock.c:		pll_num = __raw_readl(&imx_ccm->analog_pll_video_num);
arch/arm/mach-imx/mx6/clock.c:		pll_denom = __raw_readl(&imx_ccm->analog_pll_video_denom);
arch/arm/mach-imx/mx6/clock.c:		div = __raw_readl(&imx_ccm->analog_pfd_528);
arch/arm/mach-imx/mx6/clock.c:		div = __raw_readl(&imx_ccm->analog_pfd_480);
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->cacrr);
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->cbcdr);
arch/arm/mach-imx/mx6/clock.c:		reg = __raw_readl(&imx_ccm->cbcmr);
arch/arm/mach-imx/mx6/clock.c:		reg = __raw_readl(&imx_ccm->cbcmr);
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->cbcdr);
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->cscmr1);
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->cscdr1);
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->cscdr2);
arch/arm/mach-imx/mx6/clock.c:	u32 cbcdr =  __raw_readl(&imx_ccm->cbcdr);
arch/arm/mach-imx/mx6/clock.c:	cscmr1 =  __raw_readl(&imx_ccm->cscmr1);
arch/arm/mach-imx/mx6/clock.c:	u32 cbcmr = __raw_readl(&imx_ccm->cbcmr);
arch/arm/mach-imx/mx6/clock.c:	u32 cbcdr = __raw_readl(&imx_ccm->cbcdr);
arch/arm/mach-imx/mx6/clock.c:				pmu_misc2_audio_div = PMU_MISC2_AUDIO_DIV(__raw_readl(&imx_ccm->pmu_misc2));
arch/arm/mach-imx/mx6/clock.c:	       &imx_ccm->analog_pll_video_clr);
arch/arm/mach-imx/mx6/clock.c:		       &imx_ccm->analog_pll_video_set);
arch/arm/mach-imx/mx6/clock.c:		       &imx_ccm->analog_pll_video_set);
arch/arm/mach-imx/mx6/clock.c:		       &imx_ccm->analog_pll_video_set);
arch/arm/mach-imx/mx6/clock.c:	       &imx_ccm->analog_pll_video_num);
arch/arm/mach-imx/mx6/clock.c:	       &imx_ccm->analog_pll_video_denom);
arch/arm/mach-imx/mx6/clock.c:		reg = readl(&imx_ccm->analog_pll_video);
arch/arm/mach-imx/mx6/clock.c:			       &imx_ccm->analog_pll_video_set);
arch/arm/mach-imx/mx6/clock.c:			reg = readl(&imx_ccm->cscdr2);
arch/arm/mach-imx/mx6/clock.c:		reg = readl(&imx_ccm->cscdr2);
arch/arm/mach-imx/mx6/clock.c:			clrsetbits_le32(&imx_ccm->cscdr2,
arch/arm/mach-imx/mx6/clock.c:			clrsetbits_le32(&imx_ccm->cbcmr,
arch/arm/mach-imx/mx6/clock.c:			clrsetbits_le32(&imx_ccm->cscdr2,
arch/arm/mach-imx/mx6/clock.c:			clrsetbits_le32(&imx_ccm->cscmr1,
arch/arm/mach-imx/mx6/clock.c:		clrsetbits_le32(&imx_ccm->cscdr2,
arch/arm/mach-imx/mx6/clock.c:		clrsetbits_le32(&imx_ccm->cscmr1,
arch/arm/mach-imx/mx6/clock.c:		reg = readl(&imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:		writel(reg, &imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:			reg = readl(&imx_ccm->cscdr3);
arch/arm/mach-imx/mx6/clock.c:			writel(reg, &imx_ccm->cscdr3);
arch/arm/mach-imx/mx6/clock.c:			reg = readl(&imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:			writel(reg, &imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->CCGR2);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->CCGR2);
arch/arm/mach-imx/mx6/clock.c:		reg = readl(&imx_ccm->cscdr2);
arch/arm/mach-imx/mx6/clock.c:		writel(reg, &imx_ccm->cscdr2);
arch/arm/mach-imx/mx6/clock.c:		reg = readl(&imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:		writel(reg, &imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:		reg = readl(&imx_ccm->CCGR2);
arch/arm/mach-imx/mx6/clock.c:		writel(reg, &imx_ccm->CCGR2);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->cs2cdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->cs2cdr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->cscmr2);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->cscmr2);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->cscdr2);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->cscdr2);
arch/arm/mach-imx/mx6/clock.c:		clrbits_le32(&imx_ccm->CCGR3, MXC_CCM_CCGR3_QSPI1_MASK);
arch/arm/mach-imx/mx6/clock.c:		reg = readl(&imx_ccm->cscmr1);
arch/arm/mach-imx/mx6/clock.c:		writel(reg, &imx_ccm->cscmr1);
arch/arm/mach-imx/mx6/clock.c:		setbits_le32(&imx_ccm->CCGR3, MXC_CCM_CCGR3_QSPI1_MASK);
arch/arm/mach-imx/mx6/clock.c:		clrbits_le32(&imx_ccm->CCGR4, MXC_CCM_CCGR4_QSPI2_ENFC_MASK |
arch/arm/mach-imx/mx6/clock.c:		reg = readl(&imx_ccm->cs2cdr);
arch/arm/mach-imx/mx6/clock.c:		writel(reg, &imx_ccm->cs2cdr);
arch/arm/mach-imx/mx6/clock.c:		setbits_le32(&imx_ccm->CCGR4, MXC_CCM_CCGR4_QSPI2_ENFC_MASK |
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->cscmr2);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->cscmr2);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->chsccdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->chsccdr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->CCGR3);
arch/arm/mach-imx/mx6/clock.c:	u32 cscmr1 = __raw_readl(&imx_ccm->cscmr1);
arch/arm/mach-imx/mx6/clock.c:	u32 cscdr1 = __raw_readl(&imx_ccm->cscdr1);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->analog_pll_enet);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->analog_pll_enet);
arch/arm/mach-imx/mx6/clock.c:		if (readl(&imx_ccm->analog_pll_enet) & BM_ANADIG_PLL_SYS_LOCK)
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->analog_pll_enet);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->analog_pll_enet);
arch/arm/mach-imx/mx6/clock.c:	setbits_le32(&imx_ccm->CCGR5, MXC_CCM_CCGR5_SATA_MASK);
arch/arm/mach-imx/mx6/clock.c:	clrbits_le32(&imx_ccm->CCGR5, MXC_CCM_CCGR5_SATA_MASK);
arch/arm/mach-imx/mx6/clock.c:	setbits_le32(&imx_ccm->CCGR3, MXC_CCM_CCGR3_DISP_AXI_MASK);
arch/arm/mach-imx/mx6/clock.c:	setbits_le32(&imx_ccm->CCGR4, MXC_CCM_CCGR4_PCIE_MASK);
arch/arm/mach-imx/mx6/clock.c:		reg = __raw_readl(&imx_ccm->CCGR0);
arch/arm/mach-imx/mx6/clock.c:		__raw_writel(reg, &imx_ccm->CCGR0);
arch/arm/mach-imx/mx6/clock.c:		reg = __raw_readl(&imx_ccm->CCGR0);
arch/arm/mach-imx/mx6/clock.c:		__raw_writel(reg, &imx_ccm->CCGR0);
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->CCGR6);
arch/arm/mach-imx/mx6/clock.c:	__raw_writel(reg, &imx_ccm->CCGR6);
arch/arm/mach-imx/mx6/clock.c:	reg = __raw_readl(&imx_ccm->CCGR6);
arch/arm/mach-imx/mx6/clock.c:	__raw_writel(reg, &imx_ccm->CCGR6);
arch/arm/mach-imx/mx6/clock.c:	setbits_le32(&mxc_ccm->CCGR3, MXC_CCM_CCGR3_IPU1_IPU_MASK);
arch/arm/mach-imx/mx6/clock.c:		setbits_le32(&mxc_ccm->CCGR6, MXC_CCM_CCGR6_PRG_CLK0_MASK);
arch/arm/mach-imx/mx6/clock.c:		setbits_le32(&mxc_ccm->CCGR3, MXC_CCM_CCGR3_IPU2_IPU_MASK);
arch/arm/mach-imx/mx6/clock.c:	clrbits_le32(&mxc_ccm->CCGR3, MXC_CCM_CCGR3_IPU1_IPU_MASK);
arch/arm/mach-imx/mx6/clock.c:		clrbits_le32(&mxc_ccm->CCGR6, MXC_CCM_CCGR6_PRG_CLK0_MASK);
arch/arm/mach-imx/mx6/clock.c:		clrbits_le32(&mxc_ccm->CCGR3, MXC_CCM_CCGR3_IPU2_IPU_MASK);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->analog_pfd_528);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->analog_pfd_528);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->analog_pfd_480);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->analog_pfd_480);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->analog_pll_video);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->analog_pll_video);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->analog_pfd_528);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->analog_pfd_528);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->analog_pfd_480);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->analog_pfd_480);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->ccdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->ccdr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->cbcmr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->cbcmr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->cbcdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->cbcdr);
arch/arm/mach-imx/mx6/clock.c:	while (readl(&mxc_ccm->cdhipr))
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->ccsr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->ccsr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->cs2cdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->cs2cdr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->cs2cdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->cs2cdr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->cs2cdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->cs2cdr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->ccsr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->ccsr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->cbcdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->cbcdr);
arch/arm/mach-imx/mx6/clock.c:	while (readl(&mxc_ccm->cdhipr))
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&mxc_ccm->ccdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &mxc_ccm->ccdr);
arch/arm/mach-imx/mx6/clock.c:	clrbits_le32(&imx_ccm->CCGR3, MXC_CCM_CCGR3_EPDC_CLK_ENABLE_MASK);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->chsccdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->chsccdr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->chsccdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->chsccdr);
arch/arm/mach-imx/mx6/clock.c:	reg = readl(&imx_ccm->chsccdr);
arch/arm/mach-imx/mx6/clock.c:	writel(reg, &imx_ccm->chsccdr);
arch/arm/mach-imx/mx6/clock.c:	setbits_le32(&imx_ccm->CCGR3, MXC_CCM_CCGR3_EPDC_CLK_ENABLE_MASK);
arch/arm/mach-imx/mx7/clock_slice.c:	reg = __raw_readl(&imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	__raw_writel(reg, &imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	val = __raw_readl(&imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	reg = __raw_readl(&imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	__raw_writel(reg, &imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	val = __raw_readl(&imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	reg = __raw_readl(&imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	__raw_writel(reg, &imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	val = __raw_readl(&imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	val = __raw_readl(&imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	__raw_writel(val, &imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	val = __raw_readl(&imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	*val = __raw_readl(&imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	__raw_writel(val, &imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	__raw_writel(val, &imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:	val = __raw_readl(&imx_ccm->root[clock_id].target_root);
arch/arm/mach-imx/mx7/clock_slice.c:			     &imx_ccm->ccgr_array[index].ccgr_set);
arch/arm/mach-imx/mx7/clock_slice.c:			     &imx_ccm->ccgr_array[index].ccgr_clr);
drivers/mmc/sunxi_mmc.c:		priv->mclkreg = &ccm->sd0_clk_cfg;
drivers/mmc/sunxi_mmc.c:		priv->mclkreg = &ccm->sd1_clk_cfg;
drivers/mmc/sunxi_mmc.c:		priv->mclkreg = &ccm->sd2_clk_cfg;
drivers/mmc/sunxi_mmc.c:		priv->mclkreg = &ccm->sd3_clk_cfg;
drivers/mmc/sunxi_mmc.c:	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_MMC(sdc_no));
drivers/mmc/sunxi_mmc.c:	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_MMC(sdc_no));
drivers/mmc/sunxi_mmc.c:	setbits_le32(&ccm->sd_gate_reset, 1 << sdc_no);
drivers/mmc/sunxi_mmc.c:	setbits_le32(&ccm->sd_gate_reset, 1 << (RESET_SHIFT + sdc_no));
drivers/mtd/nand/raw/sunxi_nand_spl.c:	clrbits_le32(&ccm->ahb_gate0, (CLK_GATE_OPEN << AHB_GATE_OFFSET_NAND0));
drivers/mtd/nand/raw/sunxi_nand_spl.c:	clrbits_le32(&ccm->ahb_gate1, (1 << AHB_GATE_OFFSET_DMA));
drivers/mtd/nand/raw/sunxi_nand_spl.c:	clrbits_le32(&ccm->ahb_gate0, (1 << AHB_GATE_OFFSET_DMA));
drivers/mtd/nand/raw/sunxi_nand_spl.c:	clrbits_le32(&ccm->nand0_clk_cfg, CCM_NAND_CTRL_ENABLE | AHB_DIV_1);
drivers/mtd/nand/raw/sunxi_nand.c:	       &ccm->nand0_clk_cfg);
drivers/mtd/nand/raw/sunxi_nand.c:	setbits_le32(&ccm->ahb_gate0, (1 << AHB_GATE_OFFSET_NAND0));
drivers/mtd/nand/raw/sunxi_nand.c:	setbits_le32(&ccm->ahb_gate1, (1 << AHB_GATE_OFFSET_DMA));
drivers/mtd/nand/raw/sunxi_nand.c:	setbits_le32(&ccm->ahb_gate0, (1 << AHB_GATE_OFFSET_DMA));
drivers/video/sunxi/lcdc.c:		       &ccm->lcd0_ch0_clk_cfg);
drivers/video/sunxi/lcdc.c:		       &ccm->lcd0_clk_cfg);
drivers/video/sunxi/lcdc.c:		       CCM_LCD_CH1_CTRL_M(best_m), &ccm->lcd0_ch1_clk_cfg);
drivers/video/sunxi/lcdc.c:			setbits_le32(&ccm->lcd0_ch1_clk_cfg,
drivers/video/sunxi/sunxi_dw_hdmi.c:		setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_LCD0);
drivers/video/sunxi/sunxi_dw_hdmi.c:		setbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_LCD0);
drivers/video/sunxi/sunxi_dw_hdmi.c:		       &ccm->lcd0_clk_cfg);
drivers/video/sunxi/sunxi_dw_hdmi.c:		setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_LCD1);
drivers/video/sunxi/sunxi_dw_hdmi.c:		setbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_LCD1);
drivers/video/sunxi/sunxi_dw_hdmi.c:		       &ccm->lcd1_clk_cfg);
drivers/video/sunxi/sunxi_dw_hdmi.c:	clrsetbits_le32(&ccm->hdmi_clk_cfg, CCM_HDMI_CTRL_PLL_MASK,
drivers/video/sunxi/sunxi_dw_hdmi.c:	setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_HDMI);
drivers/video/sunxi/sunxi_dw_hdmi.c:	setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_HDMI2);
drivers/video/sunxi/sunxi_dw_hdmi.c:	setbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_HDMI);
drivers/video/sunxi/sunxi_dw_hdmi.c:	setbits_le32(&ccm->hdmi_slow_clk_cfg, CCM_HDMI_SLOW_CTRL_DDC_GATE);
drivers/video/sunxi/sunxi_dw_hdmi.c:	setbits_le32(&ccm->hdmi_clk_cfg, CCM_HDMI_CTRL_GATE);
drivers/video/sunxi/sunxi_lcd.c:	setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_LCD0);
drivers/video/sunxi/sunxi_lcd.c:	setbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_LCD0);
drivers/video/sunxi/sunxi_display.c:	clrsetbits_le32(&ccm->hdmi_clk_cfg, CCM_HDMI_CTRL_PLL_MASK,
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_HDMI);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_HDMI);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->hdmi_clk_cfg, CCM_HDMI_CTRL_GATE);
drivers/video/sunxi/sunxi_display.c:	clrbits_le32(&ccm->hdmi_clk_cfg, CCM_HDMI_CTRL_GATE);
drivers/video/sunxi/sunxi_display.c:	clrbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_HDMI);
drivers/video/sunxi/sunxi_display.c:	clrbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_HDMI);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->hdmi_clk_cfg, CCM_HDMI_CTRL_DDC_GATE);
drivers/video/sunxi/sunxi_display.c:	clrbits_le32(&ccm->hdmi_clk_cfg, CCM_HDMI_CTRL_DDC_GATE);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_DE_FE0);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->dram_clk_gate, 1 << CCM_DRAM_GATE_OFFSET_DE_FE0);
drivers/video/sunxi/sunxi_display.c:	clock_set_de_mod_clock(&ccm->fe0_clk_cfg, 300000000);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_DE_BE0);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_DE_BE0);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->dram_clk_gate, 1 << CCM_DRAM_GATE_OFFSET_DE_BE0);
drivers/video/sunxi/sunxi_display.c:	clock_set_de_mod_clock(&ccm->be0_clk_cfg, 300000000);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_LCD0);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->lcd0_ch0_clk_cfg, CCM_LCD_CH0_CTRL_RST);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_LCD0);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_reset2_cfg, 1 << AHB_RESET_OFFSET_LVDS);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->lvds_clk_cfg, CCM_LVDS_CTRL_RST);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->lcd0_ch0_clk_cfg, CCM_LCD_CH0_CTRL_TVE_RST);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_TVE0);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_SAT);
drivers/video/sunxi/sunxi_display.c:	setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_DRC0);
drivers/video/sunxi/sunxi_display.c:	clock_set_de_mod_clock(&ccm->iep_drc0_clk_cfg, 300000000);
drivers/video/sunxi/sunxi_de2.c:	clrsetbits_le32(&ccm->de_clk_cfg, CCM_DE2_CTRL_PLL_MASK,
drivers/video/sunxi/sunxi_de2.c:	setbits_le32(&ccm->ahb_reset1_cfg, 1 << AHB_RESET_OFFSET_DE);
drivers/video/sunxi/sunxi_de2.c:	setbits_le32(&ccm->ahb_gate1, 1 << AHB_GATE_OFFSET_DE);
drivers/video/sunxi/sunxi_de2.c:	setbits_le32(&ccm->de_clk_cfg, CCM_DE2_CTRL_GATE);
drivers/video/nxp/imx/ipu_common.c:	reg = __raw_readl(&mxc_ccm->ccdr);
drivers/video/nxp/imx/ipu_common.c:	__raw_writel(reg, &mxc_ccm->ccdr);
drivers/video/nxp/imx/ipu_common.c:	reg = __raw_readl(&mxc_ccm->clpcr);
drivers/video/nxp/imx/ipu_common.c:	__raw_writel(reg, &mxc_ccm->clpcr);
drivers/video/nxp/imx/ipu_common.c:	reg = __raw_readl(&mxc_ccm->ccdr);
drivers/video/nxp/imx/ipu_common.c:	__raw_writel(reg, &mxc_ccm->ccdr);
drivers/video/nxp/imx/ipu_common.c:	reg = __raw_readl(&mxc_ccm->clpcr);
drivers/video/nxp/imx/ipu_common.c:	__raw_writel(reg, &mxc_ccm->clpcr);
