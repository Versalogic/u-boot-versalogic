/*
 * Copyright 2012-2016 Freescale Semiconductor, Inc.
 * Copyright 2011 Linaro Ltd.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {
	aliases {
		mxcfb0 = &mxcfb1;
		mxcfb1 = &mxcfb2;
                mxcfb2 = &mxcfb3;
	};

	chosen {
		stdout-path = &uart1;
	};

	leds {
		compatible = "gpio-leds";
		cpu-user-led {
			gpios = <&gpio2 0 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat"; /* blink PLED */
			retain-state-suspended;
		};
	};
	memory: memory {
		reg = <0x10000000 0x80000000>;
	};

        regulators {

                compatible = "simple-bus";
                #address-cells = <1>;
                #size-cells = <0>;
  
  
  
                /* MJ: updates 1/31/18, add a 5V regulator for use as vin-supply for USB and HDMI */
                reg_5v: regulator@0{
                        compatible = "regulator-fixed";
                        reg = <0>;
                        regulator-name = "5V_Supply";
                        regulator-min-microvolt = <5000000>;
                        regulator-max-microvolt = <5000000>;
	  		startup-delay-us = <70000>;
                        regulator-boot-on;
                };
  
                reg_usb_h1_vbus: regulator@1{
                        compatible = "regulator-fixed";
                        reg = <1>;
                        regulator-name = "usb_h1_vbus";
                        regulator-min-microvolt = <5000000>;
                        regulator-max-microvolt = <5000000>;
                        gpio = <&gpio3 31 GPIO_ACTIVE_HIGH>;
                        enable-active-high;
                        vin-supply = <&reg_5v>;
                };
  
                reg_usb_otg_vbus: regulator@2{
                        compatible = "regulator-fixed";
                        reg = <2>;
                        regulator-name = "usb_otg_vbus";
                        regulator-min-microvolt = <5000000>;
                        regulator-max-microvolt = <5000000>;
                        gpio = <&gpio3 22 1>;
                        enable-active-high;
                        vin-supply = <&reg_5v>;
                };
 
                reg_3p3v: regulator@4 {
                        compatible = "regulator-fixed";
                        reg = <4>;
                        regulator-name = "3P3V";
                        regulator-min-microvolt = <3300000>;
                        regulator-max-microvolt = <3300000>;
                        regulator-always-on;
                };

                reg_hdmi: regulator@5 {
                        compatible = "regulator-fixed";
                        reg = <5>;
                        regulator-name = "hdmi-5v-supply";
                        regulator-min-microvolt = <5000000>;
                        regulator-max-microvolt = <5000000>;
                        enable-active-high;
                        hdmi-5v-supply = <&reg_5v>;
                };
	};


	gpio-keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_keys>;

		/* Added for Tetra -- wake up signal support? */
/*
		pcie-wake {
			label = "PCIe Wake";
			gpios = <&gpio3 26 GPIO_ACTIVE_LOW>; 
			gpio-key,wakeup;
*/
		/*	linux,code = <KEY_PCIEWAKE>; */
		/*};*/
	};

        sound {
                compatible = "fsl,imx-audio-sgtl5000";
                model = "sgtl5000-audio";
                ssi-controller = <&ssi2>;
                audio-codec = <&codec>;
                audio-routing =
                        "MIC_IN", "Mic Jack",
                        "Mic Jack", "Mic Bias",
                        "Headphone Jack", "HP_OUT";
                mux-int-port = <1>;
                mux-ext-port = <3>;
        };

	sound-hdmi {
		compatible = "fsl,imx6q-audio-hdmi",
			     "fsl,imx-audio-hdmi";
		model = "imx-audio-hdmi";
		hdmi-controller = <&hdmi_audio>;
	};

	/* 18-bit LVDS (RGB666) */
	mxcfb1: fb@0 {
                compatible = "fsl,mxc_sdc_fb";
                disp_dev = "ldb";
                interface_pix_fmt = "RGB666";
		default_bpp = <16>;  /* why not 18 - 6+6+6? */
                int_clk = <0>;
                late_init = <0>;
                status = "disabled";
        };

	/* HDMI video settings */
	mxcfb2: fb@1 {
                compatible = "fsl,mxc_sdc_fb";
                disp_dev = "hdmi";
                interface_pix_fmt = "RGB24";
                mode_str ="1920x1080M@60";
                default_bpp = <24>;
                int_clk = <0>;
                late_init = <0>;
                status = "disabled";
        };

	/* MJ:  24 bit LVDS Panel settings (RGB888), supports up to 1366x768 */
	mxcfb3: fb@2 {
		compatible = "fsl,mxc_sdc_fb";
		disp_dev = "ldb";
		interface_pix_fmt = "RGB888"; /* MJ: changed from RGB666 */
		default_bpp = <24>; /* MJ: changed from 16 */
		int_clk = <0>;
		late_init = <0>;
		status = "disabled";
	};
	backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm1 0 5000000>;
		brightness-levels = <0 4 8 16 32 64 128 255>;
		default-brightness-level = <7>;
		enable-gpios = <&gpio6 15 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};

	v4l2_cap_0 {
		compatible = "fsl,imx6q-v4l2-capture";
		ipu_id = <0>;
		csi_id = <1>;
		mclk_source = <0>;
		mipi_camera = <0>;
		default_input = <1>;
		status = "okay";
	};

	v4l2_out {
		compatible = "fsl,mxc_v4l2_output";
		status = "okay";
	};

};

&audmux {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_audmux>;
	status = "okay";
};

&cpu0 {
/*
	arm-supply = <&sw1a_reg>;
	soc-supply = <&sw1c_reg>;
*/
};

&ecspi1 {
        fsl,spi-num-chipselects = <1>;
        cs-gpios = <
		&gpio2 30 GPIO_ACTIVE_LOW
		>; 
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_ecspi1 &pinctrl_ecspi1_cs>;
        status = "okay";

        flash: 25fl016ki@0 {
                #address-cells = <1>;
                #size-cells = <1>;
                compatible = "spansion,s25fl016k";
                spi-max-frequency = <20000000>;
                reg = <0>;
        };
};

&ecspi3 {

        pinctrl-names = "default";
	fsl,spi-num-chipselects = <3>;
	cs-gpios = <
		&gpio4 24 GPIO_ACTIVE_LOW
		&gpio4 25 GPIO_ACTIVE_LOW
		&gpio4 26 GPIO_ACTIVE_LOW
		>;
        pinctrl-0 = <&pinctrl_ecspi3 &pinctrl_ecspi3_cs>;
        status = "okay";

        spi3dev0: spi@0 {
                compatible = "bosch,bmp085";
                reg = <0>;
                spi-max-frequency = <5000000>;
        };

        spi3dev1: spi@1 {
                compatible = "bosch,bmp085";
                reg = <1>;
                spi-max-frequency = <5000000>;
        };
        spi3dev2: spi@2 {
                compatible = "bosch,bmp085";
                reg = <2>;
                spi-max-frequency = <5000000>;
        };
};

&fec {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet>;
	phy-mode = "rgmii";
	/*phy-reset-gpios = <&gpio1 25 GPIO_ACTIVE_LOW>;*/
	/*fsl,magic-packet;*/
	status = "okay";
        txen-skew-ps = <0>;
        txc-skew-ps = <3000>;
        rxdv-skew-ps = <0>;
        rxc-skew-ps = <3000>;
        rxd0-skew-ps = <0>;
        rxd1-skew-ps = <0>;
        rxd2-skew-ps = <0>;
        rxd3-skew-ps = <0>;
        txd0-skew-ps = <0>;
        txd1-skew-ps = <0>;
        txd2-skew-ps = <0>;
        txd3-skew-ps = <0>;
/*
	phy-handle = <&ethphy0>;
        mdio {
                #address-cells = <1>;
                #size-cells = <0>;
                ethphy0: ethernet-phy@3 {
                        compatible = "micrel,ksz9031";
                        device_type = "ethernet-phy";
                        reg = <3>;
                };
        };
*/
};

&gpc {
	fsl,ldo-bypass = <1>; /* use ldo-bypass, u-boot will check it and configure */
	fsl,wdog-reset = <2>; /* watchdog select of reset source */
};

&dcic1 {
	dcic_id = <0>;
	dcic_mux = "dcic-hdmi";
	status = "okay";
};

&dcic2 {
	dcic_id = <1>;
	dcic_mux = "dcic-lvds0";
	status = "okay";
};

&hdmi_audio {
	status = "okay";
};

&hdmi_cec {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hdmi_cec>;
	status = "okay";
};

&hdmi_core {
	ipu_id = <0>;
	disp_id = <0>;
	status = "okay";
};

&hdmi_video {
	fsl,phy_reg_vlev = <0x0294>;
	fsl,phy_reg_cksymtx = <0x800d>;
	HDMI-supply = <&reg_hdmi>; /* 3.3V */
	status = "okay";
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	/* MJ - Touchscreen control should use I2C1 bus, updated GPIO pin info */
        polytouch1: eeti@04 {
                compatible = "eeti,egalax_ts";
                reg = <0x04>; /* I2C 7-bit address */
                interrupt-parent = <&gpio5>;
                interrupts = <9 2>;
                wakeup-gpios = <&gpio5 9 GPIO_ACTIVE_LOW>;
                linux,wakeup;
        };
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	hdmi_edid: edid@50 {
		compatible = "fsl,imx6-hdmi-i2c";
		reg = <0x50>;
	};

};
&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";

	pmic: pfuze100@08 {
		compatible = "fsl,pfuze100";
		reg = <0x08>;

           regulators {

                /* SW1AB = V1P375_CORE, sequence #2 */
                sw1a_reg: sw1ab {
                     regulator-min-microvolt = <1375000>;
                     regulator-max-microvolt = <1375000>;
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* SW1C = V1P375_SOC, sequence #3 */
                sw1c_reg: sw1c {
                     regulator-min-microvolt = <1375000>;
                     regulator-max-microvolt = <1375000>;
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* SW2 = V3P3, sequence #6 */
                sw2_reg: sw2 {
                     regulator-min-microvolt = <3300000>;
                     regulator-max-microvolt = <3300000>;
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* SW3A and SW3B = V1P35_DDR, sequence #4 */
                sw3a_reg: sw3a {
                     regulator-min-microvolt = <1350000>;
                     regulator-max-microvolt = <1350000>;
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* SW3A and SW3B = V1P35_DDR, sequence #4 */
                sw3b_reg: sw3b {
                     regulator-min-microvolt = <1350000>;
                     regulator-max-microvolt = <1350000>;
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* SW4 = V0P675_DDR_VTT = 0.5(SW3A) when VTT = Enabled, sequence #4 */
                sw4_reg: sw4 {
                     regulator-min-microvolt = <675000>;
                     regulator-max-microvolt = <675000>;
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* SWBST (NOT USED), sequence #0 */

                /* VSNVS = V3_VSNVS (Coin Cell/LDO in PMIC), not sequenced */
                /* Always on per battery or on per Vin */
                snvs_reg: vsnvs {
                     regulator-min-microvolt = <1000000>;
                     regulator-max-microvolt = <3000000>;
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* VREFDDR = V0P675_DDR_VREF, sequence #4 */
                vref_reg: vrefddr {
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* VGEN1 = V1P5_MINI, sequence #31 */
                /* last rail to turn on, delays reset release */
                vgen1_reg: vgen1 {
                     regulator-min-microvolt = <1500000>;
                     regulator-max-microvolt = <1500000>;
                     regulator-boot-on;
                     regulator-always-on;
				
				/* Suspend-to-RAM allows for turning off ??? */
				/*regulator-state-mem {
					regulator-off-in-suspend;
				};
                           */
				/* Suspend-to-DISK allows for turning off ??? */
				/*regulator-state-disk {
					regulator-off-in-suspend;
				};
                           */
			};
                /* VGEN2 = V1P2_ETH, sequence #9 */
                vgen2_reg: vgen2 {
                     regulator-min-microvolt = <1200000>;
                     regulator-max-microvolt = <1200000>;
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* VGEN3 = V1P8_AUDIO, sequence #6 */
                vgen3_reg: vgen3 {
                     regulator-min-microvolt = <1800000>;
                     regulator-max-microvolt = <1800000>;
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* VGEN4 (NOT USED), sequence #0 */

                /* VGEN5 = V2P5_ETH, sequence #8 */
                vgen5_reg: vgen5 {
                     regulator-min-microvolt = <2500000>;
                     regulator-max-microvolt = <2500000>;
                     regulator-boot-on;
                     regulator-always-on;
                };

                /* VGEN6 = V3_ALWAYS, sequence #1 */
                vgen6_reg: vgen6 {
                     regulator-min-microvolt = <3000000>;
                     regulator-max-microvolt = <3000000>;
                     regulator-boot-on;
                     regulator-always-on;
                };
	    };
	};

        codec: sgtl5000@0a {
                compatible = "fsl,sgtl5000";
                reg = <0x0a>;
                clocks = <&clks 201>;
                VDDA-supply = <&sw2_reg>;
                VDDIO-supply = <&sw2_reg>;
                VDDD-supply = <&vgen3_reg>;
        };

        fxos8700@1c {
                compatible = "fsl,fxos8700";
                reg = <0x1c>;
        };

        ov5647_mipi@36 {
                compatible = "ovti,ov5647_mipi_int";
                reg = <0x36>;
                clocks = <&clks 0>;
                clock-names = "csi_mclk";
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_cam>;
                DOVDD-supply = <&reg_3p3v>;
                AVDD-supply = <&reg_3p3v>;
                DVDD-supply = <&reg_3p3v>;
                pwn-gpios = <&gpio7 6 GPIO_ACTIVE_HIGH>;
                led-gpios = <&gpio7 7 GPIO_ACTIVE_HIGH>;
                ipu_id = <0>;
                csi_id = <1>;
                mclk = <25000000>;
                mclk_source = <0>;
/*
                extended-buffer;
*/

        };
};

&clks {
	fsl,ldb-di0-parent = <&clks IMX6QDL_CLK_PLL2_PFD0_352M>;
	fsl,ldb-di1-parent = <&clks IMX6QDL_CLK_PLL2_PFD0_352M>;
};

&can1 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_flexcan1>;
	xceiver-supply = <&sw2_reg>; 
        status = "okay";
};

&can2 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_flexcan2>;
	xceiver-supply = <&sw2_reg>; 
        status = "okay";
};


&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;
	
	imx6qdl-tetra {
		pinctrl_hog: hoggrp {
			fsl,pins = <
                                /* Programmable LED output for User I/O */
				MX6QDL_PAD_NANDF_D0__GPIO2_IO00            0x0001B018
  
                                /* Updated for TP, pull-down, 90 Ohm, slow slew */
                                MX6QDL_PAD_CSI0_PIXCLK__ARM_EVENTO         0x00013098 
                                /* Updated for TP */
                                MX6QDL_PAD_GPIO_3__XTALOSC_REF_CLK_24M     0x00013098 
                                /* Updated for TP */
                                MX6QDL_PAD_GPIO_8__XTALOSC_REF_CLK_32K     0x00013098 
                                /* COMP_IRQ# input, update to pull-up (off by default)*/
				MX6QDL_PAD_DI0_PIN2__GPIO4_IO18            0x0001B0B0
                                /* PMIC_INT# input (pull-up = off by default) */
				MX6QDL_PAD_DISP0_DAT12__GPIO5_IO06         0x0001B0B0
                                /* USB_HUB_RST# out (pull-up = off by default) */
				MX6QDL_PAD_DISP0_DAT22__GPIO5_IO16         0x0001B030
                                /* SOC_RSTOUT# out (pull-up = off by default) */
 				MX6QDL_PAD_EIM_A25__GPIO5_IO02             0x0001B030
                                /* LVDS signals */                          
                                /* GPIO6_IO16 is LVDS_PANEL_PWREN, was 0x80000000 */
                                MX6QDL_PAD_NANDF_CS3__GPIO6_IO16 0x00013018
                                /* GPIO6_IO07 is PG_V3P3_LVDS input, was 0x80000000 */
				MX6QDL_PAD_NANDF_CLE__GPIO6_IO07 0x0001B018

                                /* section for multifunction pins. Choose one function for each pin
                                   
                                /* PIN1: GPIO1/GPT_OUT1/PWM_OUT4 */
                                MX6QDL_PAD_SD1_CMD__GPIO1_IO18             0x0001B018 /* GPIO 1 */
                                /* MX6QDL_PAD_SD1_CMD__PWM4_OUT               0x0001B018 */ /* PWM_OUT4 */
                                /* MX6QDL_PAD_SD1_CMD__GPT_COMPARE1           0x0001B018 */ /* GPT_OUT1 */

				/* PIN2: GPIO2/GPT_IN1 */
                                MX6QDL_PAD_SD1_DAT0__GPIO1_IO16            0x0001B018 /* GPIO 2 */
                                /* MX6QDL_PAD_SD1_DAT0__GPT_CAPTURE1          0x0001B018 */ /* GPT_IN1 */

				/* PIN3: GPIO3/GPT_IN2/PWM_OUT3 */
                                MX6QDL_PAD_SD1_DAT1__GPIO1_IO17            0x0001B018 /* GPIO 3 */
                                /* MX6QDL_PAD_SD1_DAT1__PWM3_OUT              0x0001B018 */ /* PWM_OUT3 */
                                /* MX6QDL_PAD_SD1_DAT1__GPT_CAPTURE2          0x0001B018 */ /* GPT_IN2 */

				/* PIN4: GPIO4/GPT_OUT2/WDOG1_RST# */
                                MX6QDL_PAD_SD1_DAT2__GPIO1_IO19            0x0001B018 /* GPIO 4 */
                                /* MX6QDL_PAD_SD1_DAT2__GPT_COMPARE2          0x0001B018 */ /* GPT_OUT2 */
                                /* MX6QDL_PAD_SD1_DAT2__WDOG1_RESET_B_DEB     0x0001B018 */ /* WDOG1_RST# */

				/* PIN5: GPIO5/GPT_CLKIN */
                                MX6QDL_PAD_SD1_CLK__GPIO1_IO20             0x0001B018 /* GPIO 5 */
                                /* MX6QDL_PAD_SD1_CLK__GPT_CLKIN              0x0001B018 */ /* GPT_CLKIN */

				/* PIN6: GPIO 6 */
                                MX6QDL_PAD_DISP0_DAT10__GPIO4_IO31         0x0001B018 /* GPIO 6 */

				/* PIN7: GPIO7/PWM_OUT2/WDOG2# */
                                MX6QDL_PAD_DISP0_DAT9__GPIO4_IO30          0x0001B018 /* GPIO 7 */
                                /* MX6QDL_PAD_DISP0_DAT9__PWM2_OUT            0x0001B018 */ /*PWM_OUT2 */
				/* MX6QDL_PAD_DISP0_DAT9__WDOG2_B            0x0001B018 */ /*WDOG2# */

				/* PIN8: GPIO 8 */
                                MX6QDL_PAD_DISP0_DAT8__GPIO4_IO29          0x0001B018 /* GPIO 8 */

                                /* GP_IRQ#, set as open drain (might have mult. drivers) */
                                MX6QDL_PAD_DISP0_DAT15__GPIO5_IO09         0x0001B818 

			>;
		};

		pinctrl_cam: camgrp {
                        fsl,pins = <
                                /* MJ - GPIO7_IO06 is CSI_GPIO0, was 0x0001B0B0 */
                                /* Pull-up enabled, lower drive strength */
                                MX6QDL_PAD_SD3_DAT2__GPIO7_IO06            0x0001B098
                                /* MJ - GPIO7_IO07 is CSI_GPIO1, was 0x000120B0 */
                                /* Pull-down disabled, lower drive strength */
                                MX6QDL_PAD_SD3_DAT3__GPIO7_IO07            0x00012098
                        >;
                };

		pinctrl_flexcan1: flexcan1grp {
			fsl,pins = <
				MX6QDL_PAD_SD3_CLK__FLEXCAN1_RX            0x0001B098
				MX6QDL_PAD_SD3_CMD__FLEXCAN1_TX            0x0001B098
			>;
		};

                pinctrl_flexcan2: flexcan2grp {
                        fsl,pins = <
                                /* updated for 90 Ohm setting (50 Ohm @ 3.3V)*/
				MX6QDL_PAD_SD3_DAT0__FLEXCAN2_TX           0x0001B098
				MX6QDL_PAD_SD3_DAT1__FLEXCAN2_RX           0x0001B098
				/* currently unused CAN transceiver control signals */
                                /* set to 100k pull-down, 90 Ohm, low spd, slow slew */ 
                                /* FLEXCAN2_STBY */ 
				MX6QDL_PAD_SD3_DAT4__GPIO7_IO01            0x00013018
                                /* FLEXCAN2_CTRL */
				MX6QDL_PAD_NANDF_D7__GPIO2_IO07            0x00013018
			>;
		};

             /*  MJ 2/1/17 changes to pin control (drive strength) */
		pinctrl_weim_cs0: weimcs0grp {
                        fsl,pins = <
				MX6QDL_PAD_EIM_CS0__EIM_CS0_B              0x0000B099                    
                        >;
                };


             /*  MJ 2/1/17 changes to pin control (drive strength) */
                pinctrl_weim_nor: weimnorgrp {
                        fsl,pins = <
				MX6QDL_PAD_CSI0_DAT4__EIM_DATA02           0x0001B098
				MX6QDL_PAD_CSI0_DAT5__EIM_DATA03           0x0001B098
				MX6QDL_PAD_CSI0_DAT6__EIM_DATA04           0x0001B098
				MX6QDL_PAD_CSI0_DAT7__EIM_DATA05           0x0001B098
				MX6QDL_PAD_CSI0_DAT8__EIM_DATA06           0x0001B098
				MX6QDL_PAD_CSI0_DAT9__EIM_DATA07           0x0001B098
				MX6QDL_PAD_CSI0_DAT12__EIM_DATA08          0x0001B098
				MX6QDL_PAD_CSI0_DAT13__EIM_DATA09          0x0001B098
				MX6QDL_PAD_CSI0_DAT14__EIM_DATA10          0x0001B098
				MX6QDL_PAD_CSI0_DAT15__EIM_DATA11          0x0001B098
				MX6QDL_PAD_CSI0_DAT16__EIM_DATA12          0x0001B098
				MX6QDL_PAD_CSI0_DAT17__EIM_DATA13          0x0001B098
				MX6QDL_PAD_CSI0_DAT18__EIM_DATA14          0x0001B098
				MX6QDL_PAD_CSI0_DAT19__EIM_DATA15          0x0001B098
				MX6QDL_PAD_CSI0_DATA_EN__EIM_DATA00        0x0001B098
				MX6QDL_PAD_CSI0_VSYNC__EIM_DATA01          0x0001B098
				MX6QDL_PAD_EIM_DA0__EIM_AD00               0x0000B099
				MX6QDL_PAD_EIM_DA1__EIM_AD01               0x0000B099
				MX6QDL_PAD_EIM_DA2__EIM_AD02               0x0000B099
				MX6QDL_PAD_EIM_DA3__EIM_AD03               0x0000B099
				MX6QDL_PAD_EIM_DA4__EIM_AD04               0x0000B099
				MX6QDL_PAD_EIM_DA5__EIM_AD05               0x0000B099
				MX6QDL_PAD_EIM_DA6__EIM_AD06               0x0000B099
				MX6QDL_PAD_EIM_DA7__EIM_AD07               0x0000B099
				MX6QDL_PAD_EIM_DA8__EIM_AD08               0x0000B099
				MX6QDL_PAD_EIM_DA9__EIM_AD09               0x0000B099
				MX6QDL_PAD_EIM_DA10__EIM_AD10              0x0000B099
				MX6QDL_PAD_EIM_DA11__EIM_AD11              0x0000B099
				MX6QDL_PAD_EIM_DA12__EIM_AD12              0x0000B099
				MX6QDL_PAD_EIM_DA13__EIM_AD13              0x0000B099
				MX6QDL_PAD_EIM_DA14__EIM_AD14              0x0000B099
				MX6QDL_PAD_EIM_DA15__EIM_AD15              0x0000B099
				MX6QDL_PAD_EIM_EB0__EIM_EB0_B              0x0000B099
				MX6QDL_PAD_EIM_EB1__EIM_EB1_B              0x0000B099
				MX6QDL_PAD_EIM_OE__EIM_OE_B                0x0000B099
				MX6QDL_PAD_EIM_RW__EIM_RW                  0x0000B099
			>;
		};		

		/*  MJ 2/1/17 changes to pin control (drive strength) */
		pinctrl_audmux: audmuxgrp {
			fsl,pins = <
                                /* MJ - moved CLK_AUD here */
                                /* set all to pull-downs 100k like Sabresd */
				MX6QDL_PAD_GPIO_0__CCM_CLKO1               0x000130B0
        			MX6QDL_PAD_KEY_COL0__AUD5_TXC              0x000130B0
				MX6QDL_PAD_KEY_COL1__AUD5_TXFS             0x00013098 
				MX6QDL_PAD_KEY_ROW0__AUD5_TXD	           0x00013098            
				MX6QDL_PAD_KEY_ROW1__AUD5_RXD              0x00013098 
			>;
		};

		pinctrl_ecspi1: ecspi1grp {
			fsl,pins = <
                                /* set fast slew, 33 Ohm driver, pull-down */
				MX6QDL_PAD_EIM_D16__ECSPI1_SCLK            0x000130B9
				MX6QDL_PAD_EIM_D17__ECSPI1_MISO            0x00013099
				MX6QDL_PAD_EIM_D18__ECSPI1_MOSI            0x00013099
			>;
		};
		pinctrl_ecspi1_cs: ecspi1cs {
                        fsl,pins = <
				MX6QDL_PAD_EIM_EB2__GPIO2_IO30		   0x0001B098
                        >;
                };

                pinctrl_ecspi3: ecspi3grp {
                        fsl,pins = <
                                /* set fast slew, 33 Ohm driver, pull-down */
                                MX6QDL_PAD_DISP0_DAT0__ECSPI3_SCLK         0x000130B9
                                MX6QDL_PAD_DISP0_DAT1__ECSPI3_MOSI         0x00013099
                                MX6QDL_PAD_DISP0_DAT2__ECSPI3_MISO         0x00013099
                        >;
                };
                pinctrl_ecspi3_cs: ecspi3cs {
                        fsl,pins = <
                                MX6QDL_PAD_DISP0_DAT3__GPIO4_IO24          0x0001B098
                                MX6QDL_PAD_DISP0_DAT4__GPIO4_IO25          0x0001B098
                                MX6QDL_PAD_DISP0_DAT5__GPIO4_IO26          0x0001B098
                        >;
                };

		/*  MJ changes to pin control for all I2C (lower drive strength 90 Ohm) 
		 *  I2C pinctrl settings go from 0x4001b8b1 to 0x4001b899 */
		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_D21__I2C1_SCL               0x4001b899
				MX6QDL_PAD_EIM_D28__I2C1_SDA               0x4001b899			
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL3__I2C2_SCL              0x4001b899
				MX6QDL_PAD_KEY_ROW3__I2C2_SDA              0x4001b899
			 >;
		};

                pinctrl_i2c3: i2c3grp {
                        fsl,pins = <
                                MX6QDL_PAD_GPIO_5__I2C3_SCL                0x4001b899
                                MX6QDL_PAD_GPIO_16__I2C3_SDA               0x4001b899
                        >;
                };

		/*  MJ changes to pin control for ENET_MDIO (lower drive strength 60 Ohm) 
              *  and ENET_CRS_DV (RGMII_RST#) set as open-drain output with pull-up */
		pinctrl_enet: enetgrp {
			fsl,pins = <
				MX6QDL_PAD_ENET_MDC__ENET_MDC              0x0001B0B0
				MX6QDL_PAD_ENET_MDIO__ENET_MDIO            0x0001B0A0
				MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK       0x0001B0B0
				MX6QDL_PAD_RGMII_RD0__RGMII_RD0            0x0001B030
				MX6QDL_PAD_RGMII_RD1__RGMII_RD1            0x0001B030
				MX6QDL_PAD_RGMII_RD2__RGMII_RD2            0x0001B030
				MX6QDL_PAD_RGMII_RD3__RGMII_RD3            0x0001B030
				MX6QDL_PAD_RGMII_RXC__RGMII_RXC            0x00013030
				MX6QDL_PAD_RGMII_RX_CTL__RGMII_RX_CTL      0x00013030
				MX6QDL_PAD_RGMII_TD0__RGMII_TD0            0x0001B030
				MX6QDL_PAD_RGMII_TD1__RGMII_TD1            0x0001B030
				MX6QDL_PAD_RGMII_TD2__RGMII_TD2            0x0001B030
				MX6QDL_PAD_RGMII_TD3__RGMII_TD3            0x0001B030
				MX6QDL_PAD_RGMII_TXC__RGMII_TXC            0x00013030
				MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL      0x00013030
                                /* RGMII_RST#, open drain output with 100k pull-up */
				MX6QDL_PAD_ENET_CRS_DV__GPIO1_IO25         0x0001B8B0
				/* RGMII_INT# and RGMII_INT#_STATUS inputs respectively (GPIO)*/
                                MX6QDL_PAD_ENET_RXD1__GPIO1_IO26           0x0001B0B0
                                MX6QDL_PAD_ENET_TX_EN__GPIO1_IO28          0x0001B0B0
			>;
		};

		pinctrl_gpio_keys: gpio_keysgrp {
			fsl,pins = <
                                /* PCIe_WAKE# input, pull-up (off by default) - moved to gpio-keys */
                                MX6QDL_PAD_EIM_D26__GPIO3_IO26             0x0001B0B0
			>;
		};

		pinctrl_hdmi_cec: hdmicecgrp {
			fsl,pins = <
				MX6QDL_PAD_KEY_ROW2__HDMI_TX_CEC_LINE      0x00010898
			>;
		};


                pinctrl_sata: satagrp {
			fsl,pins = <
                                /* MSATA_DAS input, pull-down */
				MX6QDL_PAD_NANDF_D1__GPIO2_IO01            0x000130B0
                                /* SATA_ACT output, pull-down, lower spd & drive strength */
				MX6QDL_PAD_NANDF_D2__GPIO2_IO02            0x00013018
			>;
		};

                pinctrl_pcie: pciegrp {
                        fsl,pins = <
                                /* PCIE_RST# out, pull-up, external series term 22 Ohms */
                                MX6QDL_PAD_KEY_ROW4__GPIO4_IO15            0x0001B0B0
                                /* PCIE_W_DISABLE# (wireless disable), set output to 
                                open drain with pull-up and lower drive strength */
                                MX6QDL_PAD_GPIO_17__GPIO7_IO12		   0x0001B898
                                /* PCIe_WAKE# input, pull-up (off by default) - moved to gpio-keys */
                                /* MX6QDL_PAD_EIM_D26__GPIO3_IO26             0x0001B0B0 */
                                /* PRES_DISABLE2# (PCIe or mSATA) input, pull-up */
                                MX6QDL_PAD_NANDF_RB0__GPIO6_IO10           0x0001B0B0
                        >;
                };

		pinctrl_pwm1: pwm1grp {
			fsl,pins = <
				/* LVDS_PWMO: Fast slew, 90 Ohm, Medium speed settings */
				MX6QDL_PAD_SD1_DAT3__PWM1_OUT              0x0001B099 
				/* LVDS_BKLTEN: Pull-down, Slow slew, 90 Ohm, Low spd settings */
				MX6QDL_PAD_NANDF_CS2__GPIO6_IO15           0x00013018 
			>;
		};

		pinctrl_usbotg: usbotggrp {
			fsl,pins = <
				/* MX6QDL_PAD_EIM_D22__USB_OTG_PWR            0x00013098*/
                                MX6QDL_PAD_EIM_D22__GPIO3_IO22  	   0x010b0 
				MX6QDL_PAD_GPIO_1__USB_OTG_ID              0x10759 /*0x0001B0B0*/
				MX6QDL_PAD_KEY_COL4__USB_OTG_OC            0x0001B0B0
			>;
		};

                pinctrl_usbh1: usbh1grp {
                        fsl,pins = <
                                MX6QDL_PAD_EIM_D30__USB_H1_OC              0x0001B0B0
	                        /*MX6QDL_PAD_EIM_D31__USB_H1_PWR             0x0001B098*/
				MX6QDL_PAD_EIM_D31__GPIO3_IO31             0x010b0
                        >;
                };
		
             /* MJ: default = 0x0001B0B0, update some to lower drive strength and  
                slow down the speed (Set to Slow instead of default of Medium) */
		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT10__UART1_TX_DATA       0x0001B018
				MX6QDL_PAD_CSI0_DAT11__UART1_RX_DATA       0x0001B018
                                MX6QDL_PAD_EIM_D19__UART1_CTS_B            0x0001B018
                                MX6QDL_PAD_EIM_D20__UART1_RTS_B            0x0001B018
                                /* RS-232 transceiver signals for COM1/serial debug port */
                                /* XCVR1_RXEN#, pull-down to auto-enable */
				MX6QDL_PAD_NANDF_D4__GPIO2_IO04            0x00013018
                                /* XCVR1_SHDN#, pull-up to disable shutdown of device */
				MX6QDL_PAD_NANDF_D5__GPIO2_IO05            0x0001B018
			>;
		};

           /* MJ: default = 0x0001B0B0, update some to lower drive strength and  
              slow down the speed (Set to Slow instead of default of Medium) */
		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_D24__UART3_TX_DATA          0x0001B018
				MX6QDL_PAD_EIM_D25__UART3_RX_DATA          0x0001B018

			>;
		};
		
		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX6QDL_PAD_GPIO_2__SD2_WP                  0x0001B098
				MX6QDL_PAD_GPIO_4__SD2_CD_B                0x0001B098
				MX6QDL_PAD_GPIO_6__SD2_LCTL                0x0001B098
				MX6QDL_PAD_SD2_CLK__SD2_CLK                0x0001B0B1
				MX6QDL_PAD_SD2_CMD__SD2_CMD                0x0001B0B1
				MX6QDL_PAD_SD2_DAT0__SD2_DATA0             0x0001B098
				MX6QDL_PAD_SD2_DAT1__SD2_DATA1             0x0001B098
				MX6QDL_PAD_SD2_DAT2__SD2_DATA2             0x0001B098
				MX6QDL_PAD_SD2_DAT3__SD2_DATA3             0x0001B098
			>;
		};

		pinctrl_usdhc4: usdhc4grp {
			fsl,pins = <
				MX6QDL_PAD_NANDF_ALE__SD4_RESET            0x0001B098
				MX6QDL_PAD_SD4_CLK__SD4_CLK                0x0001B0B1
				MX6QDL_PAD_SD4_CMD__SD4_CMD                0x0001B0B1
				MX6QDL_PAD_SD4_DAT0__SD4_DATA0             0x0001B098
				MX6QDL_PAD_SD4_DAT1__SD4_DATA1             0x0001B098
				MX6QDL_PAD_SD4_DAT2__SD4_DATA2             0x0001B098
				MX6QDL_PAD_SD4_DAT3__SD4_DATA3             0x0001B098
				MX6QDL_PAD_SD4_DAT4__SD4_DATA4             0x0001B098
				MX6QDL_PAD_SD4_DAT5__SD4_DATA5             0x0001B098
				MX6QDL_PAD_SD4_DAT6__SD4_DATA6             0x0001B098
				MX6QDL_PAD_SD4_DAT7__SD4_DATA7             0x0001B098
 			>;
		};

           /* MJ: default = 0x0001B0B0, update some to lower drive strength and  
              slow down the speed (Set to Slow instead of default of Medium) */
		pinctrl_wdog: wdoggrp {
			fsl,pins = <
				MX6QDL_PAD_GPIO_9__WDOG1_B                 0x0001B018
			>;
		};
	};

};
&ldb {
	status = "okay";

	lvds-channel@0 {
                crtc = "ipu2-di0";
		fsl,data-mapping = "spwg";
		fsl,data-width = <18>; /* change for panel type */
                primary;
		status = "okay";

		display-timings {
			native-mode = <&timing0>;
			timing0: hsd100pxn1 {
				clock-frequency = <65000000>;
				hactive = <1024>;
				vactive = <768>;
				hback-porch = <220>;
				hfront-porch = <40>;
				vback-porch = <21>;
				vfront-porch = <7>;
				hsync-len = <60>;
				vsync-len = <10>;
			};
		};
	};
};

&mipi_csi {
	status = "okay";
	ipu_id = <0>;
	csi_id = <1>;
	v_channel = <1>;
	lanes = <2>;
	mipi_dphy_clk = <0x28>;
};

&mipi_dsi {

	status = "disable";

};
&pcie {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_pcie>;

        reset-gpio = <&gpio4 15 0>;

        status = "okay";
};


&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
	status = "okay";
};


/* Add these supply assignments from the Sabre SD board imx6qdl-sabresd.dtsi */
/* "&reg_*" names are used in imx6q.dtsi but get set up in our board file */ 
&reg_arm {
       vin-supply = <&sw1a_reg>;
};

&reg_pu {
       vin-supply = <&sw1c_reg>;
};

&reg_soc {
       vin-supply = <&sw1c_reg>;
};
&snvs_poweroff {
	status = "okay"; /* set to "disable"; to disable PMIC control from iMX6 */
};


&ssi2 {
        fsl,mode = "i2s-master";
        status = "okay";
};
/*
&ssi2 {
	fsl,mode = "i2s-slave";
	status = "okay";
};
*/

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	fsl,uart-has-rtscts;
	/*fsl,dte-mode;*/
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
        /*fsl,dte-mode;*/
	status = "okay";
};

&usbh1 {
	vbus-supply = <&reg_usb_h1_vbus>;
/*        dr_mode = "host"; */
        disable-over-current;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_usbh1>;
	status = "okay";
};

&usbotg {
	vbus-supply = <&reg_usb_otg_vbus>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg>;
	disable-over-current;
	srp-disable;
	hnp-disable;
	adp-disable;
	status = "okay";
};

&usbphy1 {
     /* Default 0x7 is nominal resistor trimming setting, SabreSD uses 0x5 */
     tx-d-cal = <0x7>; 
};

&usbphy2 {
     /* Default 0x7 is nominal resistor trimming setting, SabreSD uses 0x5 */
     tx-d-cal = <0x7>;
};

&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2>;
	bus-width = <4>;
	cd-gpios = <&gpio1 4 GPIO_ACTIVE_LOW>;
	wp-gpios = <&gpio1 2 GPIO_ACTIVE_HIGH>;
	no-1-8-v;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	status = "okay";
};

&usdhc4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc4>;
	bus-width = <8>;
	non-removable;
	no-1-8-v;
	keep-power-in-suspend;
	status = "okay";
};

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,wdog_b;
	status = "okay";
};

&wdog2 {
        pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output; /* MJ:  maybe this enables the pin output? */
	status = "disabled";
};

&weim {
	compatible = "fsl,imx6q-weim";
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_weim_nor &pinctrl_weim_cs0>;
        #address-cells = <2>;
        #size-cells = <1>;
        ranges = <0 0 0x08000000 0x08000000>;
        status = "okay"; /* pin conflict with SPI NOR */
	fsl,weim-cs-gpr = <&gpr>;

	mram@0,0 {
	    compatible = "mtd-ram";
	    reg = <0 0 1000000>;
	    /*#address-cells = <1>;
	    #size-cells = <1>;*/
	    bank-width = <2>;
	    /* EIM_CSnGCR1, EIM_CSnGCR2, EIM_CSnRCR1, EIM_CSnRCR2, EIM_CSnWCR1, EIM_CSnWCR2 */
	    /*fsl,weim-cs-timing = <0x000100B1 0x00000000 0x04080000 0x00000000 0x8400208 0x00000000>;*/
	    fsl,weim-cs-timing = <0x00B100B1 0x00000000 0x07081100 0x00000019 0x87009240 0x00000000>;
	};

};


